package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.SyuukeiBumon;

/**
 * 集計部門マスターに対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class SyuukeiBumonAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected SyuukeiBumon mapToDto(GMap map){
		return map == null ? null : new SyuukeiBumon(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<SyuukeiBumon> mapToDto(List<GMap> mapList){
		List<SyuukeiBumon> dtoList = new ArrayList<SyuukeiBumon>();
		for (var map : mapList) {
			dtoList.add(new SyuukeiBumon(map));
		}
		return dtoList;
	}
	
	/**
	 * 集計部門マスターのレコード有無を判定
	 * @param syuukeiBumonCd 集計部門コード
	 * @return true:exist false:not exist
	 */
	public boolean exists(String syuukeiBumonCd) {
		return this.find(syuukeiBumonCd) == null ? false : true;
	}
	
	/**
	 * 集計部門マスターから主キー指定でレコードを取得
	 * @param syuukeiBumonCd 集計部門コード
	 * @return 集計部門マスターDTO
	 */
	public SyuukeiBumon find(String syuukeiBumonCd) {
		final String sql = "SELECT * FROM syuukei_bumon WHERE syuukei_bumon_cd = ?";
		return mapToDto(connection.find(sql, syuukeiBumonCd));
	}
	
	/**
	 * 集計部門マスターからレコードを全件取得 ※大量データ取得に注意
	 * @return List<集計部門マスターDTO>
	 */
	public List<SyuukeiBumon> load() {
		final String sql = "SELECT * FROM syuukei_bumon ORDER BY syuukei_bumon_cd";
		return mapToDto(connection.load(sql));
	}

	/**
	* 集計部門マスター登録
	* @param dto 集計部門マスター
	* @return 件数
	*/
	public int insert(
		SyuukeiBumon dto
	){
		final String sql =
				"INSERT INTO syuukei_bumon "
			+ "VALUES(?, ?, ?, ? "
			+ ")";
			return connection.update(sql,
					dto.syuukeiBumonCd, dto.syuukeiBumonName, dto.kessankiBangou, dto.shaukeiBumonFlg
					);
	}

	/**
	* 集計部門マスター登録or更新
	* 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	* @param dto 集計部門マスター
	* @return 件数
	*/
	public int upsert(
		SyuukeiBumon dto
		 ){
		final String sql =
				"INSERT INTO syuukei_bumon "
			+ "VALUES(?, ?, ?, ? "
			+ ") ON CONFLICT ON CONSTRAINT syuukei_bumon_pkey "
			+ "DO UPDATE SET syuukei_bumon_name = ?, kessanki_bangou = ?, shaukei_bumon_flg = ? "
			+ "";
			return connection.update(sql,
				dto.syuukeiBumonCd, dto.syuukeiBumonName, dto.kessankiBangou, dto.shaukeiBumonFlg
				, dto.syuukeiBumonName, dto.kessankiBangou, dto.shaukeiBumonFlg
				);
    }
	
	/**
	 * 集計部門マスターから主キー指定でレコードを削除
	 * @param syuukeiBumonCd 集計部門コード
	 * @return 削除件数
	 */
	public int delete(String syuukeiBumonCd){
		final String sql = "DELETE FROM syuukei_bumon WHERE syuukei_bumon_cd = ?";
		return connection.update(sql, syuukeiBumonCd);
	}
}
