package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.KaniTodokeMeta;

/**
 * 届出ジェネレータメタに対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class KaniTodokeMetaAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected KaniTodokeMeta mapToDto(GMap map){
		return map == null ? null : new KaniTodokeMeta(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<KaniTodokeMeta> mapToDto(List<GMap> mapList){
		List<KaniTodokeMeta> dtoList = new ArrayList<KaniTodokeMeta>();
		for (var map : mapList) {
			dtoList.add(new KaniTodokeMeta(map));
		}
		return dtoList;
	}
	
	/**
	 * 届出ジェネレータメタのレコード有無を判定
	 * @param denpyouKbn 伝票区分
	 * @return true:exist false:not exist
	 */
	public boolean exists(String denpyouKbn) {
		return this.find(denpyouKbn) == null ? false : true;
	}
	
	/**
	 * 届出ジェネレータメタから主キー指定でレコードを取得
	 * @param denpyouKbn 伝票区分
	 * @return 届出ジェネレータメタDTO
	 */
	public KaniTodokeMeta find(String denpyouKbn) {
		final String sql = "SELECT * FROM kani_todoke_meta WHERE denpyou_kbn = ?";
		return mapToDto(connection.find(sql, denpyouKbn));
	}
	
	/**
	 * 届出ジェネレータメタからレコードを全件取得 ※大量データ取得に注意
	 * @return List<届出ジェネレータメタDTO>
	 */
	public List<KaniTodokeMeta> load() {
		final String sql = "SELECT * FROM kani_todoke_meta ORDER BY denpyou_kbn";
		return mapToDto(connection.load(sql));
	}

	/**
	* 届出ジェネレータメタ登録
	* @param dto 届出ジェネレータメタ
	* @param koushinUserId 更新ユーザーID
	* @return 件数
	*/
	public int insert(
		KaniTodokeMeta dto
		,String koushinUserId
	){
		final String sql =
				"INSERT INTO kani_todoke_meta "
			+ "VALUES(?, ?, current_timestamp, ?, current_timestamp "
			+ ")";
			return connection.update(sql,
					dto.denpyouKbn, koushinUserId, koushinUserId
					);
	}
	
	/**
	 * 届出ジェネレータメタから主キー指定でレコードを削除
	 * @param denpyouKbn 伝票区分
	 * @return 削除件数
	 */
	public int delete(String denpyouKbn){
		final String sql = "DELETE FROM kani_todoke_meta WHERE denpyou_kbn = ?";
		return connection.update(sql, denpyouKbn);
	}
}
