package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.Tsukekae;

/**
 * 付替に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class TsukekaeAbstractDao extends EteamAbstractLogic {

	/**
	 * insert文定型部
	 */
	protected final String insertSql = "INSERT INTO tsukekae (denpyou_id, denpyou_date, shouhyou_shorui_flg, zeiritsu, keigen_zeiritsu_kbn, kingaku_goukei, hf1_cd, hf1_name_ryakushiki, hf2_cd, hf2_name_ryakushiki, hf3_cd, hf3_name_ryakushiki, hf4_cd, hf4_name_ryakushiki, hf5_cd, hf5_name_ryakushiki, hf6_cd, hf6_name_ryakushiki, hf7_cd, hf7_name_ryakushiki, hf8_cd, hf8_name_ryakushiki, hf9_cd, hf9_name_ryakushiki, hf10_cd, hf10_name_ryakushiki, hosoku, tsukekae_kbn, moto_kamoku_cd, moto_kamoku_name, moto_kamoku_edaban_cd, moto_kamoku_edaban_name, moto_futan_bumon_cd, moto_futan_bumon_name, moto_torihikisaki_cd, moto_torihikisaki_name_ryakushiki, moto_kazei_kbn, moto_uf1_cd, moto_uf1_name_ryakushiki, moto_uf2_cd, moto_uf2_name_ryakushiki, moto_uf3_cd, moto_uf3_name_ryakushiki, moto_uf4_cd, moto_uf4_name_ryakushiki, moto_uf5_cd, moto_uf5_name_ryakushiki, moto_uf6_cd, moto_uf6_name_ryakushiki, moto_uf7_cd, moto_uf7_name_ryakushiki, moto_uf8_cd, moto_uf8_name_ryakushiki, moto_uf9_cd, moto_uf9_name_ryakushiki, moto_uf10_cd, moto_uf10_name_ryakushiki, moto_project_cd, moto_project_name, moto_segment_cd, moto_segment_name_ryakushiki, touroku_user_id, touroku_time, koushin_user_id, koushin_time, moto_jigyousha_kbn, moto_bunri_kbn, moto_shiire_kbn, moto_zeigaku_houshiki, invoice_denpyou) VALUES "
			+ "(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp, ?, current_timestamp, ?, ?, ?, ?, ?)";

	/**
	 * 主キー条件定型部
	 */
	protected final String whereSql = " WHERE denpyou_id = ?";

	/**
	 * @param map GMap
	 * @return dto (レコードが存在しなければNull)
	 */
	protected Tsukekae mapToDto(GMap map) {
		return map == null ? null : new Tsukekae(map);
	}

	/**
	 * @param mapList 検索結果GMap
	 * @return dtoList
	 */
	protected List<Tsukekae> mapToDto(List<GMap> mapList) {
		List<Tsukekae> dtoList = new ArrayList<Tsukekae>();
		for (var map : mapList) {
			dtoList.add(new Tsukekae(map));
		}
		return dtoList;
	}

	/**
	 * 付替のレコード有無を判定
	 * @param denpyouId 伝票ID
	 * @return true:exist false:not exist
	 */
	public boolean exists(String denpyouId) {
		return this.find(denpyouId) != null;
	}

	/**
	 * 付替から主キー指定でレコードを取得
	 * @param denpyouId 伝票ID
	 * @return 付替DTO
	 */
	public Tsukekae find(String denpyouId) {
		final String sql = "SELECT * FROM tsukekae " + this.whereSql;
		return mapToDto(connection.find(sql, denpyouId));
	}

	/**
	 * 付替からレコードを全件取得 ※大量データ取得に注意
	 * @return List<付替DTO>
	 */
	public List<Tsukekae> load() {
		final String sql = "SELECT * FROM tsukekae  ORDER BY denpyou_id";
		return mapToDto(connection.load(sql));
	}

	/**
	 * 付替登録
	 * @param dto 付替
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int insert(Tsukekae dto, String koushinUserId) {
		return connection.update(this.insertSql, dto.denpyouId, dto.denpyouDate, dto.shouhyouShoruiFlg, dto.zeiritsu, dto.keigenZeiritsuKbn, dto.kingakuGoukei, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.hosoku, dto.tsukekaeKbn, dto.motoKamokuCd, dto.motoKamokuName, dto.motoKamokuEdabanCd, dto.motoKamokuEdabanName, dto.motoFutanBumonCd, dto.motoFutanBumonName, dto.motoTorihikisakiCd, dto.motoTorihikisakiNameRyakushiki, dto.motoKazeiKbn, dto.motoUf1Cd, dto.motoUf1NameRyakushiki, dto.motoUf2Cd, dto.motoUf2NameRyakushiki, dto.motoUf3Cd, dto.motoUf3NameRyakushiki, dto.motoUf4Cd, dto.motoUf4NameRyakushiki, dto.motoUf5Cd, dto.motoUf5NameRyakushiki, dto.motoUf6Cd, dto.motoUf6NameRyakushiki, dto.motoUf7Cd, dto.motoUf7NameRyakushiki, dto.motoUf8Cd, dto.motoUf8NameRyakushiki, dto.motoUf9Cd, dto.motoUf9NameRyakushiki, dto.motoUf10Cd, dto.motoUf10NameRyakushiki, dto.motoProjectCd, dto.motoProjectName, dto.motoSegmentCd, dto.motoSegmentNameRyakushiki, koushinUserId, koushinUserId, dto.motoJigyoushaKbn, dto.motoBunriKbn, dto.motoShiireKbn, dto.motoZeigakuHoushiki, dto.invoiceDenpyou);
	}

	/**
	 * 付替更新
	 * @param dto 付替
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int update(Tsukekae dto, String koushinUserId) {
		final String sql = "UPDATE tsukekae SET  denpyou_date = ?, shouhyou_shorui_flg = ?, zeiritsu = ?, keigen_zeiritsu_kbn = ?, kingaku_goukei = ?, hf1_cd = ?, hf1_name_ryakushiki = ?, hf2_cd = ?, hf2_name_ryakushiki = ?, hf3_cd = ?, hf3_name_ryakushiki = ?, hf4_cd = ?, hf4_name_ryakushiki = ?, hf5_cd = ?, hf5_name_ryakushiki = ?, hf6_cd = ?, hf6_name_ryakushiki = ?, hf7_cd = ?, hf7_name_ryakushiki = ?, hf8_cd = ?, hf8_name_ryakushiki = ?, hf9_cd = ?, hf9_name_ryakushiki = ?, hf10_cd = ?, hf10_name_ryakushiki = ?, hosoku = ?, tsukekae_kbn = ?, moto_kamoku_cd = ?, moto_kamoku_name = ?, moto_kamoku_edaban_cd = ?, moto_kamoku_edaban_name = ?, moto_futan_bumon_cd = ?, moto_futan_bumon_name = ?, moto_torihikisaki_cd = ?, moto_torihikisaki_name_ryakushiki = ?, moto_kazei_kbn = ?, moto_uf1_cd = ?, moto_uf1_name_ryakushiki = ?, moto_uf2_cd = ?, moto_uf2_name_ryakushiki = ?, moto_uf3_cd = ?, moto_uf3_name_ryakushiki = ?, moto_uf4_cd = ?, moto_uf4_name_ryakushiki = ?, moto_uf5_cd = ?, moto_uf5_name_ryakushiki = ?, moto_uf6_cd = ?, moto_uf6_name_ryakushiki = ?, moto_uf7_cd = ?, moto_uf7_name_ryakushiki = ?, moto_uf8_cd = ?, moto_uf8_name_ryakushiki = ?, moto_uf9_cd = ?, moto_uf9_name_ryakushiki = ?, moto_uf10_cd = ?, moto_uf10_name_ryakushiki = ?, moto_project_cd = ?, moto_project_name = ?, moto_segment_cd = ?, moto_segment_name_ryakushiki = ?, koushin_user_id = ?, koushin_time = current_timestamp, moto_jigyousha_kbn = ?, moto_bunri_kbn = ?, moto_shiire_kbn = ?, moto_zeigaku_houshiki = ?, invoice_denpyou = ? " + this.whereSql;
		return connection.update(sql, dto.denpyouDate, dto.shouhyouShoruiFlg, dto.zeiritsu, dto.keigenZeiritsuKbn, dto.kingakuGoukei, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.hosoku, dto.tsukekaeKbn, dto.motoKamokuCd, dto.motoKamokuName, dto.motoKamokuEdabanCd, dto.motoKamokuEdabanName, dto.motoFutanBumonCd, dto.motoFutanBumonName, dto.motoTorihikisakiCd, dto.motoTorihikisakiNameRyakushiki, dto.motoKazeiKbn, dto.motoUf1Cd, dto.motoUf1NameRyakushiki, dto.motoUf2Cd, dto.motoUf2NameRyakushiki, dto.motoUf3Cd, dto.motoUf3NameRyakushiki, dto.motoUf4Cd, dto.motoUf4NameRyakushiki, dto.motoUf5Cd, dto.motoUf5NameRyakushiki, dto.motoUf6Cd, dto.motoUf6NameRyakushiki, dto.motoUf7Cd, dto.motoUf7NameRyakushiki, dto.motoUf8Cd, dto.motoUf8NameRyakushiki, dto.motoUf9Cd, dto.motoUf9NameRyakushiki, dto.motoUf10Cd, dto.motoUf10NameRyakushiki, dto.motoProjectCd, dto.motoProjectName, dto.motoSegmentCd, dto.motoSegmentNameRyakushiki, koushinUserId, dto.motoJigyoushaKbn, dto.motoBunriKbn, dto.motoShiireKbn, dto.motoZeigakuHoushiki, dto.invoiceDenpyou, dto.denpyouId);
	}

	/**
	 * 付替登録or更新
	 * 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	 * @param dto 付替
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int upsert(Tsukekae dto, String koushinUserId) {
		final String sql = this.insertSql
			+ " ON CONFLICT ON CONSTRAINT tsukekae_pkey "
			+ "DO UPDATE SET  denpyou_date = ?, shouhyou_shorui_flg = ?, zeiritsu = ?, keigen_zeiritsu_kbn = ?, kingaku_goukei = ?, hf1_cd = ?, hf1_name_ryakushiki = ?, hf2_cd = ?, hf2_name_ryakushiki = ?, hf3_cd = ?, hf3_name_ryakushiki = ?, hf4_cd = ?, hf4_name_ryakushiki = ?, hf5_cd = ?, hf5_name_ryakushiki = ?, hf6_cd = ?, hf6_name_ryakushiki = ?, hf7_cd = ?, hf7_name_ryakushiki = ?, hf8_cd = ?, hf8_name_ryakushiki = ?, hf9_cd = ?, hf9_name_ryakushiki = ?, hf10_cd = ?, hf10_name_ryakushiki = ?, hosoku = ?, tsukekae_kbn = ?, moto_kamoku_cd = ?, moto_kamoku_name = ?, moto_kamoku_edaban_cd = ?, moto_kamoku_edaban_name = ?, moto_futan_bumon_cd = ?, moto_futan_bumon_name = ?, moto_torihikisaki_cd = ?, moto_torihikisaki_name_ryakushiki = ?, moto_kazei_kbn = ?, moto_uf1_cd = ?, moto_uf1_name_ryakushiki = ?, moto_uf2_cd = ?, moto_uf2_name_ryakushiki = ?, moto_uf3_cd = ?, moto_uf3_name_ryakushiki = ?, moto_uf4_cd = ?, moto_uf4_name_ryakushiki = ?, moto_uf5_cd = ?, moto_uf5_name_ryakushiki = ?, moto_uf6_cd = ?, moto_uf6_name_ryakushiki = ?, moto_uf7_cd = ?, moto_uf7_name_ryakushiki = ?, moto_uf8_cd = ?, moto_uf8_name_ryakushiki = ?, moto_uf9_cd = ?, moto_uf9_name_ryakushiki = ?, moto_uf10_cd = ?, moto_uf10_name_ryakushiki = ?, moto_project_cd = ?, moto_project_name = ?, moto_segment_cd = ?, moto_segment_name_ryakushiki = ?, koushin_user_id = ?, koushin_time = current_timestamp, moto_jigyousha_kbn = ?, moto_bunri_kbn = ?, moto_shiire_kbn = ?, moto_zeigaku_houshiki = ?, invoice_denpyou = ? ";
		return connection.update(sql, dto.denpyouId, dto.denpyouDate, dto.shouhyouShoruiFlg, dto.zeiritsu, dto.keigenZeiritsuKbn, dto.kingakuGoukei, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.hosoku, dto.tsukekaeKbn, dto.motoKamokuCd, dto.motoKamokuName, dto.motoKamokuEdabanCd, dto.motoKamokuEdabanName, dto.motoFutanBumonCd, dto.motoFutanBumonName, dto.motoTorihikisakiCd, dto.motoTorihikisakiNameRyakushiki, dto.motoKazeiKbn, dto.motoUf1Cd, dto.motoUf1NameRyakushiki, dto.motoUf2Cd, dto.motoUf2NameRyakushiki, dto.motoUf3Cd, dto.motoUf3NameRyakushiki, dto.motoUf4Cd, dto.motoUf4NameRyakushiki, dto.motoUf5Cd, dto.motoUf5NameRyakushiki, dto.motoUf6Cd, dto.motoUf6NameRyakushiki, dto.motoUf7Cd, dto.motoUf7NameRyakushiki, dto.motoUf8Cd, dto.motoUf8NameRyakushiki, dto.motoUf9Cd, dto.motoUf9NameRyakushiki, dto.motoUf10Cd, dto.motoUf10NameRyakushiki, dto.motoProjectCd, dto.motoProjectName, dto.motoSegmentCd, dto.motoSegmentNameRyakushiki, koushinUserId, koushinUserId, dto.motoJigyoushaKbn, dto.motoBunriKbn, dto.motoShiireKbn, dto.motoZeigakuHoushiki, dto.invoiceDenpyou, dto.denpyouDate, dto.shouhyouShoruiFlg, dto.zeiritsu, dto.keigenZeiritsuKbn, dto.kingakuGoukei, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.hosoku, dto.tsukekaeKbn, dto.motoKamokuCd, dto.motoKamokuName, dto.motoKamokuEdabanCd, dto.motoKamokuEdabanName, dto.motoFutanBumonCd, dto.motoFutanBumonName, dto.motoTorihikisakiCd, dto.motoTorihikisakiNameRyakushiki, dto.motoKazeiKbn, dto.motoUf1Cd, dto.motoUf1NameRyakushiki, dto.motoUf2Cd, dto.motoUf2NameRyakushiki, dto.motoUf3Cd, dto.motoUf3NameRyakushiki, dto.motoUf4Cd, dto.motoUf4NameRyakushiki, dto.motoUf5Cd, dto.motoUf5NameRyakushiki, dto.motoUf6Cd, dto.motoUf6NameRyakushiki, dto.motoUf7Cd, dto.motoUf7NameRyakushiki, dto.motoUf8Cd, dto.motoUf8NameRyakushiki, dto.motoUf9Cd, dto.motoUf9NameRyakushiki, dto.motoUf10Cd, dto.motoUf10NameRyakushiki, dto.motoProjectCd, dto.motoProjectName, dto.motoSegmentCd, dto.motoSegmentNameRyakushiki, koushinUserId, dto.motoJigyoushaKbn, dto.motoBunriKbn, dto.motoShiireKbn, dto.motoZeigakuHoushiki, dto.invoiceDenpyou);
	}

	/**
	 * 付替から主キー指定でレコードを削除
	 * @param denpyouId 伝票ID
	 * @return 削除件数
	 */
	public int delete(String denpyouId) {
		final String sql = "DELETE FROM tsukekae " + this.whereSql;
		return connection.update(sql, denpyouId);
	}
}