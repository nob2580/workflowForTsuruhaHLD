package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.NittouNadoMaster;

/**
 * 国内用日当等マスターに対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class NittouNadoMasterAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected NittouNadoMaster mapToDto(GMap map){
		return map == null ? null : new NittouNadoMaster(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<NittouNadoMaster> mapToDto(List<GMap> mapList){
		List<NittouNadoMaster> dtoList = new ArrayList<NittouNadoMaster>();
		for (var map : mapList) {
			dtoList.add(new NittouNadoMaster(map));
		}
		return dtoList;
	}
	
	/**
	 * 国内用日当等マスターのレコード有無を判定
	 * @param shubetsu1 種別１
	 * @param shubetsu2 種別２
	 * @param yakushokuCd 役職コード
	 * @return true:exist false:not exist
	 */
	public boolean exists(String shubetsu1, String shubetsu2, String yakushokuCd) {
		return this.find(shubetsu1, shubetsu2, yakushokuCd) == null ? false : true;
	}
	
	/**
	 * 国内用日当等マスターから主キー指定でレコードを取得
	 * @param shubetsu1 種別１
	 * @param shubetsu2 種別２
	 * @param yakushokuCd 役職コード
	 * @return 国内用日当等マスターDTO
	 */
	public NittouNadoMaster find(String shubetsu1, String shubetsu2, String yakushokuCd) {
		final String sql = "SELECT * FROM nittou_nado_master WHERE shubetsu1 = ? AND shubetsu2 = ? AND yakushoku_cd = ?";
		return mapToDto(connection.find(sql, shubetsu1, shubetsu2, yakushokuCd));
	}
	
	/**
	 * 国内用日当等マスターからレコードを全件取得 ※大量データ取得に注意
	 * @return List<国内用日当等マスターDTO>
	 */
	public List<NittouNadoMaster> load() {
		final String sql = "SELECT * FROM nittou_nado_master ORDER BY shubetsu1, shubetsu2, yakushoku_cd";
		return mapToDto(connection.load(sql));
	}
	
	/**
	 * 国内用日当等マスターから一部キー指定でレコードを取得
	 * @param shubetsu1 種別１
	 * @return List<国内用日当等マスター>DTO
	 */
	public List<NittouNadoMaster> load(String shubetsu1) {
		final String sql = "SELECT * FROM nittou_nado_master WHERE shubetsu1 = ? "
							+ "ORDER BY shubetsu1, shubetsu2, yakushoku_cd";
		return mapToDto(connection.load(sql, shubetsu1));
	}
	
	/**
	 * 国内用日当等マスターから一部キー指定でレコードを取得
	 * @param shubetsu1 種別１
	 * @param shubetsu2 種別２
	 * @return List<国内用日当等マスター>DTO
	 */
	public List<NittouNadoMaster> load(String shubetsu1, String shubetsu2) {
		final String sql = "SELECT * FROM nittou_nado_master WHERE shubetsu1 = ?  AND shubetsu2 = ? "
							+ "ORDER BY shubetsu1, shubetsu2, yakushoku_cd";
		return mapToDto(connection.load(sql, shubetsu1, shubetsu2));
	}

	/**
	* 国内用日当等マスター登録
	* @param dto 国内用日当等マスター
	* @return 件数
	*/
	public int insert(
		NittouNadoMaster dto
	){
		final String sql =
				"INSERT INTO nittou_nado_master "
			+ "VALUES(?, ?, ?, ?, ?, ?, ?, ? "
			+ ")";
			return connection.update(sql,
					dto.shubetsu1, dto.shubetsu2, dto.yakushokuCd, dto.tanka, dto.shouhyouShoruiHissuFlg, dto.nittouShukuhakuhiFlg, dto.zeiKubun, dto.edaban
					);
	}

	/**
	* 国内用日当等マスター登録or更新
	* 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	* @param dto 国内用日当等マスター
	* @return 件数
	*/
	public int upsert(
		NittouNadoMaster dto
		 ){
		final String sql =
				"INSERT INTO nittou_nado_master "
			+ "VALUES(?, ?, ?, ?, ?, ?, ?, ? "
			+ ") ON CONFLICT ON CONSTRAINT nittou_nado_master_pkey "
			+ "DO UPDATE SET tanka = ?, shouhyou_shorui_hissu_flg = ?, nittou_shukuhakuhi_flg = ?, zei_kubun = ?, edaban = ? "
			+ "";
			return connection.update(sql,
				dto.shubetsu1, dto.shubetsu2, dto.yakushokuCd, dto.tanka, dto.shouhyouShoruiHissuFlg, dto.nittouShukuhakuhiFlg, dto.zeiKubun, dto.edaban
				, dto.tanka, dto.shouhyouShoruiHissuFlg, dto.nittouShukuhakuhiFlg, dto.zeiKubun, dto.edaban
				);
    }
	
	/**
	 * 国内用日当等マスターから主キー指定でレコードを削除
	 * @param shubetsu1 種別１
	 * @param shubetsu2 種別２
	 * @param yakushokuCd 役職コード
	 * @return 削除件数
	 */
	public int delete(String shubetsu1, String shubetsu2, String yakushokuCd){
		final String sql = "DELETE FROM nittou_nado_master WHERE shubetsu1 = ? AND shubetsu2 = ? AND yakushoku_cd = ?";
		return connection.update(sql, shubetsu1, shubetsu2, yakushokuCd);
	}
	
	/**
	 * 国内用日当等マスターから一部キー指定でレコードを削除
	 * @param shubetsu1 種別１
	 * @return 削除件数
	 */
	public int delete(String shubetsu1) {
		final String sql = "DELETE FROM nittou_nado_master WHERE shubetsu1 = ? ";
		return connection.update(sql, shubetsu1);
	}
	
	/**
	 * 国内用日当等マスターから一部キー指定でレコードを削除
	 * @param shubetsu1 種別１
	 * @param shubetsu2 種別２
	 * @return 削除件数
	 */
	public int delete(String shubetsu1, String shubetsu2) {
		final String sql = "DELETE FROM nittou_nado_master WHERE shubetsu1 = ?  AND shubetsu2 = ? ";
		return connection.update(sql, shubetsu1, shubetsu2);
	}
}
