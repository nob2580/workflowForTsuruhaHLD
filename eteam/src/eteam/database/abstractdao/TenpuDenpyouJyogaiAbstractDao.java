package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.TenpuDenpyouJyogai;

/**
 * 添付伝票除外に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class TenpuDenpyouJyogaiAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected TenpuDenpyouJyogai mapToDto(GMap map){
		return map == null ? null : new TenpuDenpyouJyogai(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<TenpuDenpyouJyogai> mapToDto(List<GMap> mapList){
		List<TenpuDenpyouJyogai> dtoList = new ArrayList<TenpuDenpyouJyogai>();
		for (var map : mapList) {
			dtoList.add(new TenpuDenpyouJyogai(map));
		}
		return dtoList;
	}
	
	/**
	 * 添付伝票除外のレコード有無を判定
	 * @param denpyouId 伝票ID
	 * @return true:exist false:not exist
	 */
	public boolean exists(String denpyouId) {
		return this.find(denpyouId) == null ? false : true;
	}
	
	/**
	 * 添付伝票除外から主キー指定でレコードを取得
	 * @param denpyouId 伝票ID
	 * @return 添付伝票除外DTO
	 */
	public TenpuDenpyouJyogai find(String denpyouId) {
		final String sql = "SELECT * FROM tenpu_denpyou_jyogai WHERE denpyou_id = ?";
		return mapToDto(connection.find(sql, denpyouId));
	}
	
	/**
	 * 添付伝票除外からレコードを全件取得 ※大量データ取得に注意
	 * @return List<添付伝票除外DTO>
	 */
	public List<TenpuDenpyouJyogai> load() {
		final String sql = "SELECT * FROM tenpu_denpyou_jyogai ORDER BY denpyou_id";
		return mapToDto(connection.load(sql));
	}

	/**
	* 添付伝票除外登録
	* @param dto 添付伝票除外
	* @return 件数
	*/
	public int insert(
		TenpuDenpyouJyogai dto
	){
		final String sql =
				"INSERT INTO tenpu_denpyou_jyogai "
			+ "VALUES(? "
			+ ")";
			return connection.update(sql,
					dto.denpyouId
					);
	}
	
	/**
	 * 添付伝票除外から主キー指定でレコードを削除
	 * @param denpyouId 伝票ID
	 * @return 削除件数
	 */
	public int delete(String denpyouId){
		final String sql = "DELETE FROM tenpu_denpyou_jyogai WHERE denpyou_id = ?";
		return connection.update(sql, denpyouId);
	}
}
