package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.KinouSeigyo;

/**
 * 機能制御に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class KinouSeigyoAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected KinouSeigyo mapToDto(GMap map){
		return map == null ? null : new KinouSeigyo(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<KinouSeigyo> mapToDto(List<GMap> mapList){
		List<KinouSeigyo> dtoList = new ArrayList<KinouSeigyo>();
		for (var map : mapList) {
			dtoList.add(new KinouSeigyo(map));
		}
		return dtoList;
	}
	
	/**
	 * 機能制御のレコード有無を判定
	 * @param kinouSeigyoCd 機能制御コード
	 * @return true:exist false:not exist
	 */
	public boolean exists(String kinouSeigyoCd) {
		return this.find(kinouSeigyoCd) == null ? false : true;
	}
	
	/**
	 * 機能制御から主キー指定でレコードを取得
	 * @param kinouSeigyoCd 機能制御コード
	 * @return 機能制御DTO
	 */
	public KinouSeigyo find(String kinouSeigyoCd) {
		final String sql = "SELECT * FROM kinou_seigyo WHERE kinou_seigyo_cd = ?";
		return mapToDto(connection.find(sql, kinouSeigyoCd));
	}
	
	/**
	 * 機能制御からレコードを全件取得 ※大量データ取得に注意
	 * @return List<機能制御DTO>
	 */
	public List<KinouSeigyo> load() {
		final String sql = "SELECT * FROM kinou_seigyo ORDER BY kinou_seigyo_cd";
		return mapToDto(connection.load(sql));
	}

	/**
	* 機能制御登録
	* @param dto 機能制御
	* @return 件数
	*/
	public int insert(
		KinouSeigyo dto
	){
		final String sql =
				"INSERT INTO kinou_seigyo "
			+ "VALUES(?, ? "
			+ ")";
			return connection.update(sql,
					dto.kinouSeigyoCd, dto.kinouSeigyoKbn
					);
	}

	/**
	* 機能制御登録or更新
	* 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	* @param dto 機能制御
	* @return 件数
	*/
	public int upsert(
		KinouSeigyo dto
		 ){
		final String sql =
				"INSERT INTO kinou_seigyo "
			+ "VALUES(?, ? "
			+ ") ON CONFLICT ON CONSTRAINT kinou_seigyo_pkey "
			+ "DO UPDATE SET kinou_seigyo_kbn = ? "
			+ "";
			return connection.update(sql,
				dto.kinouSeigyoCd, dto.kinouSeigyoKbn
				, dto.kinouSeigyoKbn
				);
    }
	
	/**
	 * 機能制御から主キー指定でレコードを削除
	 * @param kinouSeigyoCd 機能制御コード
	 * @return 削除件数
	 */
	public int delete(String kinouSeigyoCd){
		final String sql = "DELETE FROM kinou_seigyo WHERE kinou_seigyo_cd = ?";
		return connection.update(sql, kinouSeigyoCd);
	}
}
