package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.ShiwakePatternMasterZaimuKyoten;

/**
 * 仕訳パターンマスター(拠点)に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class ShiwakePatternMasterZaimuKyotenAbstractDao extends EteamAbstractLogic {

	/**
	 * insert文定型部
	 */
	protected final String insertSql = "INSERT INTO shiwake_pattern_master_zaimu_kyoten (denpyou_kbn, zaimu_kyoten_nyuryoku_pattern_no, shiwake_edano, delete_flg, yuukou_kigen_from, yuukou_kigen_to, bunrui1, bunrui2, bunrui3, torihiki_name, tekiyou_flg, tekiyou, nyushukkin_flg, hyouji_jun, shain_cd_renkei_flg, tenpu_file_hissu_flg, shiwake_taishougai_flg, fusen_flg, fusen_color, zaimu_kyoten_nyuryoku_pattern_no_bumon_furikae, zaimu_kyoten_nyuryoku_haifu_pattern_no, header_futan_bumon_cd, header_torihikisaki_cd, header_kamoku_cd, header_kamoku_edaban_cd, header_project_cd, header_segment_cd, header_uf1_cd, header_uf2_cd, header_uf3_cd, header_uf4_cd, header_uf5_cd, header_uf6_cd, header_uf7_cd, header_uf8_cd, header_uf9_cd, header_uf10_cd, header_uf_kotei1_cd, header_uf_kotei2_cd, header_uf_kotei3_cd, header_uf_kotei4_cd, header_uf_kotei5_cd, header_uf_kotei6_cd, header_uf_kotei7_cd, header_uf_kotei8_cd, header_uf_kotei9_cd, header_uf_kotei10_cd, header_kazei_kbn, header_zeiritsu, header_keigen_zeiritsu_kbn, header_bunri_kbn, header_kobetsu_kbn, kari_futan_bumon_cd, kari_kamoku_cd, kari_kamoku_edaban_cd, kari_torihikisaki_cd, kari_project_cd, kari_segment_cd, kari_uf1_cd, kari_uf2_cd, kari_uf3_cd, kari_uf4_cd, kari_uf5_cd, kari_uf6_cd, kari_uf7_cd, kari_uf8_cd, kari_uf9_cd, kari_uf10_cd, kari_uf_kotei1_cd, kari_uf_kotei2_cd, kari_uf_kotei3_cd, kari_uf_kotei4_cd, kari_uf_kotei5_cd, kari_uf_kotei6_cd, kari_uf_kotei7_cd, kari_uf_kotei8_cd, kari_uf_kotei9_cd, kari_uf_kotei10_cd, kari_kazei_kbn, kari_zeiritsu, kari_keigen_zeiritsu_kbn, kari_bunri_kbn, kari_kobetsu_kbn, kashi_futan_bumon_cd, kashi_kamoku_cd, kashi_kamoku_edaban_cd, kashi_torihikisaki_cd, kashi_project_cd, kashi_segment_cd, kashi_uf1_cd, kashi_uf2_cd, kashi_uf3_cd, kashi_uf4_cd, kashi_uf5_cd, kashi_uf6_cd, kashi_uf7_cd, kashi_uf8_cd, kashi_uf9_cd, kashi_uf10_cd, kashi_uf_kotei1_cd, kashi_uf_kotei2_cd, kashi_uf_kotei3_cd, kashi_uf_kotei4_cd, kashi_uf_kotei5_cd, kashi_uf_kotei6_cd, kashi_uf_kotei7_cd, kashi_uf_kotei8_cd, kashi_uf_kotei9_cd, kashi_uf_kotei10_cd, kashi_kazei_kbn, kashi_zeiritsu, kashi_keigen_zeiritsu_kbn, kashi_bunri_kbn, kashi_kobetsu_kbn, touroku_user_id, touroku_time, koushin_user_id, koushin_time, old_header_kazei_kbn, old_kari_kazei_kbn, old_kashi_kazei_kbn, kari_jigyousha_kbn, kashi_jigyousha_kbn, kashi_zeigaku_houshiki) VALUES "
			+ "(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp, ?, current_timestamp, ?, ?, ?, ?, ?, ?)";

	/**
	 * 主キー条件定型部
	 */
	protected final String whereSql = " WHERE denpyou_kbn = ? AND zaimu_kyoten_nyuryoku_pattern_no = ? AND shiwake_edano = ?";

	/**
	 * @param map GMap
	 * @return dto (レコードが存在しなければNull)
	 */
	protected ShiwakePatternMasterZaimuKyoten mapToDto(GMap map) {
		return map == null ? null : new ShiwakePatternMasterZaimuKyoten(map);
	}

	/**
	 * @param mapList 検索結果GMap
	 * @return dtoList
	 */
	protected List<ShiwakePatternMasterZaimuKyoten> mapToDto(List<GMap> mapList) {
		List<ShiwakePatternMasterZaimuKyoten> dtoList = new ArrayList<ShiwakePatternMasterZaimuKyoten>();
		for (var map : mapList) {
			dtoList.add(new ShiwakePatternMasterZaimuKyoten(map));
		}
		return dtoList;
	}

	/**
	 * 仕訳パターンマスター(拠点)のレコード有無を判定
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @param shiwakeEdano 仕訳枝番号
	 * @return true:exist false:not exist
	 */
	public boolean exists(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo, int shiwakeEdano) {
		return this.find(denpyouKbn, zaimuKyotenNyuryokuPatternNo, shiwakeEdano) != null;
	}

	/**
	 * 仕訳パターンマスター(拠点)から主キー指定でレコードを取得
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @param shiwakeEdano 仕訳枝番号
	 * @return 仕訳パターンマスター(拠点)DTO
	 */
	public ShiwakePatternMasterZaimuKyoten find(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo, int shiwakeEdano) {
		final String sql = "SELECT * FROM shiwake_pattern_master_zaimu_kyoten " + this.whereSql;
		return mapToDto(connection.find(sql, denpyouKbn, zaimuKyotenNyuryokuPatternNo, shiwakeEdano));
	}

	/**
	 * 仕訳パターンマスター(拠点)からレコードを全件取得 ※大量データ取得に注意
	 * @return List<仕訳パターンマスター(拠点)DTO>
	 */
	public List<ShiwakePatternMasterZaimuKyoten> load() {
		final String sql = "SELECT * FROM shiwake_pattern_master_zaimu_kyoten  ORDER BY denpyou_kbn, zaimu_kyoten_nyuryoku_pattern_no, shiwake_edano";
		return mapToDto(connection.load(sql));
	}

	/**
	 * 仕訳パターンマスター(拠点)から一部キー（伝票区分）指定でレコードを取得
	 * @param denpyouKbn 伝票区分
	 * @return List<仕訳パターンマスター(拠点)>DTO
	 */
	public List<ShiwakePatternMasterZaimuKyoten> loadByDenpyouKbn(String denpyouKbn) {
		final String sql = "SELECT * FROM shiwake_pattern_master_zaimu_kyoten WHERE denpyou_kbn = ? "
							+ "ORDER BY denpyou_kbn, zaimu_kyoten_nyuryoku_pattern_no, shiwake_edano";
		return mapToDto(connection.load(sql, denpyouKbn));
	}
	
	/**
	 * 仕訳パターンマスター(拠点)から一部キー（伝票区分・パターンNo）指定でレコードを取得
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @return List<仕訳パターンマスター(拠点)>DTO
	 */
	public List<ShiwakePatternMasterZaimuKyoten> loadByDenpyouKbnAndNyuryokuPatternNo(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo) {
		final String sql = "SELECT * FROM shiwake_pattern_master_zaimu_kyoten WHERE denpyou_kbn = ?  AND zaimu_kyoten_nyuryoku_pattern_no = ? "
							+ "ORDER BY denpyou_kbn, zaimu_kyoten_nyuryoku_pattern_no, shiwake_edano";
		return mapToDto(connection.load(sql, denpyouKbn, zaimuKyotenNyuryokuPatternNo));
	}

	/**
	 * 仕訳パターンマスター(拠点)登録
	 * @param dto 仕訳パターンマスター(拠点)
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int insert(ShiwakePatternMasterZaimuKyoten dto, String koushinUserId) {
		return connection.update(this.insertSql, dto.denpyouKbn, dto.zaimuKyotenNyuryokuPatternNo, dto.shiwakeEdano, dto.deleteFlg, dto.yuukouKigenFrom, dto.yuukouKigenTo, dto.bunrui1, dto.bunrui2, dto.bunrui3, dto.torihikiName, dto.tekiyouFlg, dto.tekiyou, dto.nyushukkinFlg, dto.hyoujiJun, dto.shainCdRenkeiFlg, dto.tenpuFileHissuFlg, dto.shiwakeTaishougaiFlg, dto.fusenFlg, dto.fusenColor, dto.zaimuKyotenNyuryokuPatternNoBumonFurikae, dto.zaimuKyotenNyuryokuHaifuPatternNo, dto.headerFutanBumonCd, dto.headerTorihikisakiCd, dto.headerKamokuCd, dto.headerKamokuEdabanCd, dto.headerProjectCd, dto.headerSegmentCd, dto.headerUf1Cd, dto.headerUf2Cd, dto.headerUf3Cd, dto.headerUf4Cd, dto.headerUf5Cd, dto.headerUf6Cd, dto.headerUf7Cd, dto.headerUf8Cd, dto.headerUf9Cd, dto.headerUf10Cd, dto.headerUfKotei1Cd, dto.headerUfKotei2Cd, dto.headerUfKotei3Cd, dto.headerUfKotei4Cd, dto.headerUfKotei5Cd, dto.headerUfKotei6Cd, dto.headerUfKotei7Cd, dto.headerUfKotei8Cd, dto.headerUfKotei9Cd, dto.headerUfKotei10Cd, dto.headerKazeiKbn, dto.headerZeiritsu, dto.headerKeigenZeiritsuKbn, dto.headerBunriKbn, dto.headerKobetsuKbn, dto.kariFutanBumonCd, dto.kariKamokuCd, dto.kariKamokuEdabanCd, dto.kariTorihikisakiCd, dto.kariProjectCd, dto.kariSegmentCd, dto.kariUf1Cd, dto.kariUf2Cd, dto.kariUf3Cd, dto.kariUf4Cd, dto.kariUf5Cd, dto.kariUf6Cd, dto.kariUf7Cd, dto.kariUf8Cd, dto.kariUf9Cd, dto.kariUf10Cd, dto.kariUfKotei1Cd, dto.kariUfKotei2Cd, dto.kariUfKotei3Cd, dto.kariUfKotei4Cd, dto.kariUfKotei5Cd, dto.kariUfKotei6Cd, dto.kariUfKotei7Cd, dto.kariUfKotei8Cd, dto.kariUfKotei9Cd, dto.kariUfKotei10Cd, dto.kariKazeiKbn, dto.kariZeiritsu, dto.kariKeigenZeiritsuKbn, dto.kariBunriKbn, dto.kariKobetsuKbn, dto.kashiFutanBumonCd, dto.kashiKamokuCd, dto.kashiKamokuEdabanCd, dto.kashiTorihikisakiCd, dto.kashiProjectCd, dto.kashiSegmentCd, dto.kashiUf1Cd, dto.kashiUf2Cd, dto.kashiUf3Cd, dto.kashiUf4Cd, dto.kashiUf5Cd, dto.kashiUf6Cd, dto.kashiUf7Cd, dto.kashiUf8Cd, dto.kashiUf9Cd, dto.kashiUf10Cd, dto.kashiUfKotei1Cd, dto.kashiUfKotei2Cd, dto.kashiUfKotei3Cd, dto.kashiUfKotei4Cd, dto.kashiUfKotei5Cd, dto.kashiUfKotei6Cd, dto.kashiUfKotei7Cd, dto.kashiUfKotei8Cd, dto.kashiUfKotei9Cd, dto.kashiUfKotei10Cd, dto.kashiKazeiKbn, dto.kashiZeiritsu, dto.kashiKeigenZeiritsuKbn, dto.kashiBunriKbn, dto.kashiKobetsuKbn, koushinUserId, koushinUserId, dto.oldHeaderKazeiKbn, dto.oldKariKazeiKbn, dto.oldKashiKazeiKbn, dto.kariJigyoushaKbn, dto.kashiJigyoushaKbn, dto.kashiZeigakuHoushiki);
	}

	/**
	 * 仕訳パターンマスター(拠点)更新
	 * @param dto 仕訳パターンマスター(拠点)
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int update(ShiwakePatternMasterZaimuKyoten dto, String koushinUserId) {
		final String sql = "UPDATE shiwake_pattern_master_zaimu_kyoten SET  delete_flg = ?, yuukou_kigen_from = ?, yuukou_kigen_to = ?, bunrui1 = ?, bunrui2 = ?, bunrui3 = ?, torihiki_name = ?, tekiyou_flg = ?, tekiyou = ?, nyushukkin_flg = ?, hyouji_jun = ?, shain_cd_renkei_flg = ?, tenpu_file_hissu_flg = ?, shiwake_taishougai_flg = ?, fusen_flg = ?, fusen_color = ?, zaimu_kyoten_nyuryoku_pattern_no_bumon_furikae = ?, zaimu_kyoten_nyuryoku_haifu_pattern_no = ?, header_futan_bumon_cd = ?, header_torihikisaki_cd = ?, header_kamoku_cd = ?, header_kamoku_edaban_cd = ?, header_project_cd = ?, header_segment_cd = ?, header_uf1_cd = ?, header_uf2_cd = ?, header_uf3_cd = ?, header_uf4_cd = ?, header_uf5_cd = ?, header_uf6_cd = ?, header_uf7_cd = ?, header_uf8_cd = ?, header_uf9_cd = ?, header_uf10_cd = ?, header_uf_kotei1_cd = ?, header_uf_kotei2_cd = ?, header_uf_kotei3_cd = ?, header_uf_kotei4_cd = ?, header_uf_kotei5_cd = ?, header_uf_kotei6_cd = ?, header_uf_kotei7_cd = ?, header_uf_kotei8_cd = ?, header_uf_kotei9_cd = ?, header_uf_kotei10_cd = ?, header_kazei_kbn = ?, header_zeiritsu = ?, header_keigen_zeiritsu_kbn = ?, header_bunri_kbn = ?, header_kobetsu_kbn = ?, kari_futan_bumon_cd = ?, kari_kamoku_cd = ?, kari_kamoku_edaban_cd = ?, kari_torihikisaki_cd = ?, kari_project_cd = ?, kari_segment_cd = ?, kari_uf1_cd = ?, kari_uf2_cd = ?, kari_uf3_cd = ?, kari_uf4_cd = ?, kari_uf5_cd = ?, kari_uf6_cd = ?, kari_uf7_cd = ?, kari_uf8_cd = ?, kari_uf9_cd = ?, kari_uf10_cd = ?, kari_uf_kotei1_cd = ?, kari_uf_kotei2_cd = ?, kari_uf_kotei3_cd = ?, kari_uf_kotei4_cd = ?, kari_uf_kotei5_cd = ?, kari_uf_kotei6_cd = ?, kari_uf_kotei7_cd = ?, kari_uf_kotei8_cd = ?, kari_uf_kotei9_cd = ?, kari_uf_kotei10_cd = ?, kari_kazei_kbn = ?, kari_zeiritsu = ?, kari_keigen_zeiritsu_kbn = ?, kari_bunri_kbn = ?, kari_kobetsu_kbn = ?, kashi_futan_bumon_cd = ?, kashi_kamoku_cd = ?, kashi_kamoku_edaban_cd = ?, kashi_torihikisaki_cd = ?, kashi_project_cd = ?, kashi_segment_cd = ?, kashi_uf1_cd = ?, kashi_uf2_cd = ?, kashi_uf3_cd = ?, kashi_uf4_cd = ?, kashi_uf5_cd = ?, kashi_uf6_cd = ?, kashi_uf7_cd = ?, kashi_uf8_cd = ?, kashi_uf9_cd = ?, kashi_uf10_cd = ?, kashi_uf_kotei1_cd = ?, kashi_uf_kotei2_cd = ?, kashi_uf_kotei3_cd = ?, kashi_uf_kotei4_cd = ?, kashi_uf_kotei5_cd = ?, kashi_uf_kotei6_cd = ?, kashi_uf_kotei7_cd = ?, kashi_uf_kotei8_cd = ?, kashi_uf_kotei9_cd = ?, kashi_uf_kotei10_cd = ?, kashi_kazei_kbn = ?, kashi_zeiritsu = ?, kashi_keigen_zeiritsu_kbn = ?, kashi_bunri_kbn = ?, kashi_kobetsu_kbn = ?, koushin_user_id = ?, koushin_time = current_timestamp, old_header_kazei_kbn = ?, old_kari_kazei_kbn = ?, old_kashi_kazei_kbn = ?, kari_jigyousha_kbn = ?, kashi_jigyousha_kbn = ?, kashi_zeigaku_houshiki = ? " + this.whereSql;
		return connection.update(sql, dto.deleteFlg, dto.yuukouKigenFrom, dto.yuukouKigenTo, dto.bunrui1, dto.bunrui2, dto.bunrui3, dto.torihikiName, dto.tekiyouFlg, dto.tekiyou, dto.nyushukkinFlg, dto.hyoujiJun, dto.shainCdRenkeiFlg, dto.tenpuFileHissuFlg, dto.shiwakeTaishougaiFlg, dto.fusenFlg, dto.fusenColor, dto.zaimuKyotenNyuryokuPatternNoBumonFurikae, dto.zaimuKyotenNyuryokuHaifuPatternNo, dto.headerFutanBumonCd, dto.headerTorihikisakiCd, dto.headerKamokuCd, dto.headerKamokuEdabanCd, dto.headerProjectCd, dto.headerSegmentCd, dto.headerUf1Cd, dto.headerUf2Cd, dto.headerUf3Cd, dto.headerUf4Cd, dto.headerUf5Cd, dto.headerUf6Cd, dto.headerUf7Cd, dto.headerUf8Cd, dto.headerUf9Cd, dto.headerUf10Cd, dto.headerUfKotei1Cd, dto.headerUfKotei2Cd, dto.headerUfKotei3Cd, dto.headerUfKotei4Cd, dto.headerUfKotei5Cd, dto.headerUfKotei6Cd, dto.headerUfKotei7Cd, dto.headerUfKotei8Cd, dto.headerUfKotei9Cd, dto.headerUfKotei10Cd, dto.headerKazeiKbn, dto.headerZeiritsu, dto.headerKeigenZeiritsuKbn, dto.headerBunriKbn, dto.headerKobetsuKbn, dto.kariFutanBumonCd, dto.kariKamokuCd, dto.kariKamokuEdabanCd, dto.kariTorihikisakiCd, dto.kariProjectCd, dto.kariSegmentCd, dto.kariUf1Cd, dto.kariUf2Cd, dto.kariUf3Cd, dto.kariUf4Cd, dto.kariUf5Cd, dto.kariUf6Cd, dto.kariUf7Cd, dto.kariUf8Cd, dto.kariUf9Cd, dto.kariUf10Cd, dto.kariUfKotei1Cd, dto.kariUfKotei2Cd, dto.kariUfKotei3Cd, dto.kariUfKotei4Cd, dto.kariUfKotei5Cd, dto.kariUfKotei6Cd, dto.kariUfKotei7Cd, dto.kariUfKotei8Cd, dto.kariUfKotei9Cd, dto.kariUfKotei10Cd, dto.kariKazeiKbn, dto.kariZeiritsu, dto.kariKeigenZeiritsuKbn, dto.kariBunriKbn, dto.kariKobetsuKbn, dto.kashiFutanBumonCd, dto.kashiKamokuCd, dto.kashiKamokuEdabanCd, dto.kashiTorihikisakiCd, dto.kashiProjectCd, dto.kashiSegmentCd, dto.kashiUf1Cd, dto.kashiUf2Cd, dto.kashiUf3Cd, dto.kashiUf4Cd, dto.kashiUf5Cd, dto.kashiUf6Cd, dto.kashiUf7Cd, dto.kashiUf8Cd, dto.kashiUf9Cd, dto.kashiUf10Cd, dto.kashiUfKotei1Cd, dto.kashiUfKotei2Cd, dto.kashiUfKotei3Cd, dto.kashiUfKotei4Cd, dto.kashiUfKotei5Cd, dto.kashiUfKotei6Cd, dto.kashiUfKotei7Cd, dto.kashiUfKotei8Cd, dto.kashiUfKotei9Cd, dto.kashiUfKotei10Cd, dto.kashiKazeiKbn, dto.kashiZeiritsu, dto.kashiKeigenZeiritsuKbn, dto.kashiBunriKbn, dto.kashiKobetsuKbn, koushinUserId, dto.oldHeaderKazeiKbn, dto.oldKariKazeiKbn, dto.oldKashiKazeiKbn, dto.kariJigyoushaKbn, dto.kashiJigyoushaKbn, dto.kashiZeigakuHoushiki, dto.denpyouKbn, dto.zaimuKyotenNyuryokuPatternNo, dto.shiwakeEdano);
	}

	/**
	 * 仕訳パターンマスター(拠点)登録or更新
	 * 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	 * @param dto 仕訳パターンマスター(拠点)
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int upsert(ShiwakePatternMasterZaimuKyoten dto, String koushinUserId) {
		final String sql = this.insertSql
			+ " ON CONFLICT ON CONSTRAINT shiwake_pattern_master_zaimu_kyoten_pkey "
			+ "DO UPDATE SET  delete_flg = ?, yuukou_kigen_from = ?, yuukou_kigen_to = ?, bunrui1 = ?, bunrui2 = ?, bunrui3 = ?, torihiki_name = ?, tekiyou_flg = ?, tekiyou = ?, nyushukkin_flg = ?, hyouji_jun = ?, shain_cd_renkei_flg = ?, tenpu_file_hissu_flg = ?, shiwake_taishougai_flg = ?, fusen_flg = ?, fusen_color = ?, zaimu_kyoten_nyuryoku_pattern_no_bumon_furikae = ?, zaimu_kyoten_nyuryoku_haifu_pattern_no = ?, header_futan_bumon_cd = ?, header_torihikisaki_cd = ?, header_kamoku_cd = ?, header_kamoku_edaban_cd = ?, header_project_cd = ?, header_segment_cd = ?, header_uf1_cd = ?, header_uf2_cd = ?, header_uf3_cd = ?, header_uf4_cd = ?, header_uf5_cd = ?, header_uf6_cd = ?, header_uf7_cd = ?, header_uf8_cd = ?, header_uf9_cd = ?, header_uf10_cd = ?, header_uf_kotei1_cd = ?, header_uf_kotei2_cd = ?, header_uf_kotei3_cd = ?, header_uf_kotei4_cd = ?, header_uf_kotei5_cd = ?, header_uf_kotei6_cd = ?, header_uf_kotei7_cd = ?, header_uf_kotei8_cd = ?, header_uf_kotei9_cd = ?, header_uf_kotei10_cd = ?, header_kazei_kbn = ?, header_zeiritsu = ?, header_keigen_zeiritsu_kbn = ?, header_bunri_kbn = ?, header_kobetsu_kbn = ?, kari_futan_bumon_cd = ?, kari_kamoku_cd = ?, kari_kamoku_edaban_cd = ?, kari_torihikisaki_cd = ?, kari_project_cd = ?, kari_segment_cd = ?, kari_uf1_cd = ?, kari_uf2_cd = ?, kari_uf3_cd = ?, kari_uf4_cd = ?, kari_uf5_cd = ?, kari_uf6_cd = ?, kari_uf7_cd = ?, kari_uf8_cd = ?, kari_uf9_cd = ?, kari_uf10_cd = ?, kari_uf_kotei1_cd = ?, kari_uf_kotei2_cd = ?, kari_uf_kotei3_cd = ?, kari_uf_kotei4_cd = ?, kari_uf_kotei5_cd = ?, kari_uf_kotei6_cd = ?, kari_uf_kotei7_cd = ?, kari_uf_kotei8_cd = ?, kari_uf_kotei9_cd = ?, kari_uf_kotei10_cd = ?, kari_kazei_kbn = ?, kari_zeiritsu = ?, kari_keigen_zeiritsu_kbn = ?, kari_bunri_kbn = ?, kari_kobetsu_kbn = ?, kashi_futan_bumon_cd = ?, kashi_kamoku_cd = ?, kashi_kamoku_edaban_cd = ?, kashi_torihikisaki_cd = ?, kashi_project_cd = ?, kashi_segment_cd = ?, kashi_uf1_cd = ?, kashi_uf2_cd = ?, kashi_uf3_cd = ?, kashi_uf4_cd = ?, kashi_uf5_cd = ?, kashi_uf6_cd = ?, kashi_uf7_cd = ?, kashi_uf8_cd = ?, kashi_uf9_cd = ?, kashi_uf10_cd = ?, kashi_uf_kotei1_cd = ?, kashi_uf_kotei2_cd = ?, kashi_uf_kotei3_cd = ?, kashi_uf_kotei4_cd = ?, kashi_uf_kotei5_cd = ?, kashi_uf_kotei6_cd = ?, kashi_uf_kotei7_cd = ?, kashi_uf_kotei8_cd = ?, kashi_uf_kotei9_cd = ?, kashi_uf_kotei10_cd = ?, kashi_kazei_kbn = ?, kashi_zeiritsu = ?, kashi_keigen_zeiritsu_kbn = ?, kashi_bunri_kbn = ?, kashi_kobetsu_kbn = ?, koushin_user_id = ?, koushin_time = current_timestamp, old_header_kazei_kbn = ?, old_kari_kazei_kbn = ?, old_kashi_kazei_kbn = ?, kari_jigyousha_kbn = ?, kashi_jigyousha_kbn = ?, kashi_zeigaku_houshiki = ? ";
		return connection.update(sql, dto.denpyouKbn, dto.zaimuKyotenNyuryokuPatternNo, dto.shiwakeEdano, dto.deleteFlg, dto.yuukouKigenFrom, dto.yuukouKigenTo, dto.bunrui1, dto.bunrui2, dto.bunrui3, dto.torihikiName, dto.tekiyouFlg, dto.tekiyou, dto.nyushukkinFlg, dto.hyoujiJun, dto.shainCdRenkeiFlg, dto.tenpuFileHissuFlg, dto.shiwakeTaishougaiFlg, dto.fusenFlg, dto.fusenColor, dto.zaimuKyotenNyuryokuPatternNoBumonFurikae, dto.zaimuKyotenNyuryokuHaifuPatternNo, dto.headerFutanBumonCd, dto.headerTorihikisakiCd, dto.headerKamokuCd, dto.headerKamokuEdabanCd, dto.headerProjectCd, dto.headerSegmentCd, dto.headerUf1Cd, dto.headerUf2Cd, dto.headerUf3Cd, dto.headerUf4Cd, dto.headerUf5Cd, dto.headerUf6Cd, dto.headerUf7Cd, dto.headerUf8Cd, dto.headerUf9Cd, dto.headerUf10Cd, dto.headerUfKotei1Cd, dto.headerUfKotei2Cd, dto.headerUfKotei3Cd, dto.headerUfKotei4Cd, dto.headerUfKotei5Cd, dto.headerUfKotei6Cd, dto.headerUfKotei7Cd, dto.headerUfKotei8Cd, dto.headerUfKotei9Cd, dto.headerUfKotei10Cd, dto.headerKazeiKbn, dto.headerZeiritsu, dto.headerKeigenZeiritsuKbn, dto.headerBunriKbn, dto.headerKobetsuKbn, dto.kariFutanBumonCd, dto.kariKamokuCd, dto.kariKamokuEdabanCd, dto.kariTorihikisakiCd, dto.kariProjectCd, dto.kariSegmentCd, dto.kariUf1Cd, dto.kariUf2Cd, dto.kariUf3Cd, dto.kariUf4Cd, dto.kariUf5Cd, dto.kariUf6Cd, dto.kariUf7Cd, dto.kariUf8Cd, dto.kariUf9Cd, dto.kariUf10Cd, dto.kariUfKotei1Cd, dto.kariUfKotei2Cd, dto.kariUfKotei3Cd, dto.kariUfKotei4Cd, dto.kariUfKotei5Cd, dto.kariUfKotei6Cd, dto.kariUfKotei7Cd, dto.kariUfKotei8Cd, dto.kariUfKotei9Cd, dto.kariUfKotei10Cd, dto.kariKazeiKbn, dto.kariZeiritsu, dto.kariKeigenZeiritsuKbn, dto.kariBunriKbn, dto.kariKobetsuKbn, dto.kashiFutanBumonCd, dto.kashiKamokuCd, dto.kashiKamokuEdabanCd, dto.kashiTorihikisakiCd, dto.kashiProjectCd, dto.kashiSegmentCd, dto.kashiUf1Cd, dto.kashiUf2Cd, dto.kashiUf3Cd, dto.kashiUf4Cd, dto.kashiUf5Cd, dto.kashiUf6Cd, dto.kashiUf7Cd, dto.kashiUf8Cd, dto.kashiUf9Cd, dto.kashiUf10Cd, dto.kashiUfKotei1Cd, dto.kashiUfKotei2Cd, dto.kashiUfKotei3Cd, dto.kashiUfKotei4Cd, dto.kashiUfKotei5Cd, dto.kashiUfKotei6Cd, dto.kashiUfKotei7Cd, dto.kashiUfKotei8Cd, dto.kashiUfKotei9Cd, dto.kashiUfKotei10Cd, dto.kashiKazeiKbn, dto.kashiZeiritsu, dto.kashiKeigenZeiritsuKbn, dto.kashiBunriKbn, dto.kashiKobetsuKbn, koushinUserId, koushinUserId, dto.oldHeaderKazeiKbn, dto.oldKariKazeiKbn, dto.oldKashiKazeiKbn, dto.kariJigyoushaKbn, dto.kashiJigyoushaKbn, dto.kashiZeigakuHoushiki, dto.deleteFlg, dto.yuukouKigenFrom, dto.yuukouKigenTo, dto.bunrui1, dto.bunrui2, dto.bunrui3, dto.torihikiName, dto.tekiyouFlg, dto.tekiyou, dto.nyushukkinFlg, dto.hyoujiJun, dto.shainCdRenkeiFlg, dto.tenpuFileHissuFlg, dto.shiwakeTaishougaiFlg, dto.fusenFlg, dto.fusenColor, dto.zaimuKyotenNyuryokuPatternNoBumonFurikae, dto.zaimuKyotenNyuryokuHaifuPatternNo, dto.headerFutanBumonCd, dto.headerTorihikisakiCd, dto.headerKamokuCd, dto.headerKamokuEdabanCd, dto.headerProjectCd, dto.headerSegmentCd, dto.headerUf1Cd, dto.headerUf2Cd, dto.headerUf3Cd, dto.headerUf4Cd, dto.headerUf5Cd, dto.headerUf6Cd, dto.headerUf7Cd, dto.headerUf8Cd, dto.headerUf9Cd, dto.headerUf10Cd, dto.headerUfKotei1Cd, dto.headerUfKotei2Cd, dto.headerUfKotei3Cd, dto.headerUfKotei4Cd, dto.headerUfKotei5Cd, dto.headerUfKotei6Cd, dto.headerUfKotei7Cd, dto.headerUfKotei8Cd, dto.headerUfKotei9Cd, dto.headerUfKotei10Cd, dto.headerKazeiKbn, dto.headerZeiritsu, dto.headerKeigenZeiritsuKbn, dto.headerBunriKbn, dto.headerKobetsuKbn, dto.kariFutanBumonCd, dto.kariKamokuCd, dto.kariKamokuEdabanCd, dto.kariTorihikisakiCd, dto.kariProjectCd, dto.kariSegmentCd, dto.kariUf1Cd, dto.kariUf2Cd, dto.kariUf3Cd, dto.kariUf4Cd, dto.kariUf5Cd, dto.kariUf6Cd, dto.kariUf7Cd, dto.kariUf8Cd, dto.kariUf9Cd, dto.kariUf10Cd, dto.kariUfKotei1Cd, dto.kariUfKotei2Cd, dto.kariUfKotei3Cd, dto.kariUfKotei4Cd, dto.kariUfKotei5Cd, dto.kariUfKotei6Cd, dto.kariUfKotei7Cd, dto.kariUfKotei8Cd, dto.kariUfKotei9Cd, dto.kariUfKotei10Cd, dto.kariKazeiKbn, dto.kariZeiritsu, dto.kariKeigenZeiritsuKbn, dto.kariBunriKbn, dto.kariKobetsuKbn, dto.kashiFutanBumonCd, dto.kashiKamokuCd, dto.kashiKamokuEdabanCd, dto.kashiTorihikisakiCd, dto.kashiProjectCd, dto.kashiSegmentCd, dto.kashiUf1Cd, dto.kashiUf2Cd, dto.kashiUf3Cd, dto.kashiUf4Cd, dto.kashiUf5Cd, dto.kashiUf6Cd, dto.kashiUf7Cd, dto.kashiUf8Cd, dto.kashiUf9Cd, dto.kashiUf10Cd, dto.kashiUfKotei1Cd, dto.kashiUfKotei2Cd, dto.kashiUfKotei3Cd, dto.kashiUfKotei4Cd, dto.kashiUfKotei5Cd, dto.kashiUfKotei6Cd, dto.kashiUfKotei7Cd, dto.kashiUfKotei8Cd, dto.kashiUfKotei9Cd, dto.kashiUfKotei10Cd, dto.kashiKazeiKbn, dto.kashiZeiritsu, dto.kashiKeigenZeiritsuKbn, dto.kashiBunriKbn, dto.kashiKobetsuKbn, koushinUserId, dto.oldHeaderKazeiKbn, dto.oldKariKazeiKbn, dto.oldKashiKazeiKbn, dto.kariJigyoushaKbn, dto.kashiJigyoushaKbn, dto.kashiZeigakuHoushiki);
	}

	/**
	 * 仕訳パターンマスター(拠点)から主キー指定でレコードを削除
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @param shiwakeEdano 仕訳枝番号
	 * @return 削除件数
	 */
	public int delete(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo, int shiwakeEdano) {
		final String sql = "DELETE FROM shiwake_pattern_master_zaimu_kyoten " + this.whereSql;
		return connection.update(sql, denpyouKbn, zaimuKyotenNyuryokuPatternNo, shiwakeEdano);
	}
	
	/**
	 * 仕訳パターンマスター(拠点)から一部キー（伝票区分）指定でレコードを削除
	 * @param denpyouKbn 伝票区分
	 * @return 削除件数
	 */
	public int deleteByDenpyouKbn(String denpyouKbn) {
		final String sql = "DELETE FROM shiwake_pattern_master_zaimu_kyoten WHERE denpyou_kbn = ? ";
		return connection.update(sql, denpyouKbn);
} 
	/**
	 * 仕訳パターンマスター(拠点)から一部キー（伝票区分・パターンNo）指定でレコードを削除
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @return 削除件数
	 */
	public int deleteByDenpyouKbnAndNyuryokuPatternNo(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo) {
		final String sql = "DELETE FROM shiwake_pattern_master_zaimu_kyoten WHERE denpyou_kbn = ?  AND zaimu_kyoten_nyuryoku_pattern_no = ? ";
		return connection.update(sql, denpyouKbn, zaimuKyotenNyuryokuPatternNo);
	}
	
	/**
	 * 次の仕訳枝番を取得する。欠番がある場合はその最小値。
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @return 次の仕訳枝番
	 */
	public int getNextShiwakeNo(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo)
	{
		final String sql = "SELECT "
				+ "  COALESCE(MIN(shiwake_edano) + 1, 1) AS next_shiwake_edano "
				+ "FROM shiwake_pattern_master_zaimu_kyoten t1 "
				+ "WHERE "
				+ "  t1.denpyou_kbn = ? AND "
				+ "  t1.zaimu_kyoten_nyuryoku_pattern_no = ? AND "
				+ "  0 < t1.shiwake_edano AND "
				+ "  NOT EXISTS(SELECT * FROM shiwake_pattern_master_zaimu_kyoten t2 WHERE (t2.denpyou_kbn, t2.zaimu_kyoten_nyuryoku_pattern_no, t2.shiwake_edano) = (t1.denpyou_kbn, t1.zaimu_kyoten_nyuryoku_pattern_no, t1.shiwake_edano + 1)) ";
		return connection.find(sql, denpyouKbn, zaimuKyotenNyuryokuPatternNo).get("next_shiwake_edano");
	}
}
