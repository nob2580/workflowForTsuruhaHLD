package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.KaigaiKoutsuuShudanMaster;

/**
 * 海外用交通手段マスターに対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class KaigaiKoutsuuShudanMasterAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected KaigaiKoutsuuShudanMaster mapToDto(GMap map){
		return map == null ? null : new KaigaiKoutsuuShudanMaster(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<KaigaiKoutsuuShudanMaster> mapToDto(List<GMap> mapList){
		List<KaigaiKoutsuuShudanMaster> dtoList = new ArrayList<KaigaiKoutsuuShudanMaster>();
		for (var map : mapList) {
			dtoList.add(new KaigaiKoutsuuShudanMaster(map));
		}
		return dtoList;
	}
	
	/**
	 * 海外用交通手段マスターのレコード有無を判定
	 * @param sortJun 並び順
	 * @param koutsuuShudan 交通手段
	 * @return true:exist false:not exist
	 */
	public boolean exists(String sortJun, String koutsuuShudan) {
		return this.find(sortJun, koutsuuShudan) == null ? false : true;
	}
	
	/**
	 * 海外用交通手段マスターから主キー指定でレコードを取得
	 * @param sortJun 並び順
	 * @param koutsuuShudan 交通手段
	 * @return 海外用交通手段マスターDTO
	 */
	public KaigaiKoutsuuShudanMaster find(String sortJun, String koutsuuShudan) {
		final String sql = "SELECT * FROM kaigai_koutsuu_shudan_master WHERE sort_jun = ? AND koutsuu_shudan = ?";
		return mapToDto(connection.find(sql, sortJun, koutsuuShudan));
	}
	
	/**
	 * 海外用交通手段マスターからレコードを全件取得 ※大量データ取得に注意
	 * @return List<海外用交通手段マスターDTO>
	 */
	public List<KaigaiKoutsuuShudanMaster> load() {
		final String sql = "SELECT * FROM kaigai_koutsuu_shudan_master ORDER BY sort_jun, koutsuu_shudan";
		return mapToDto(connection.load(sql));
	}
	
	/**
	 * 海外用交通手段マスターから一部キー指定でレコードを取得
	 * @param sortJun 並び順
	 * @return List<海外用交通手段マスター>DTO
	 */
	public List<KaigaiKoutsuuShudanMaster> load(String sortJun) {
		final String sql = "SELECT * FROM kaigai_koutsuu_shudan_master WHERE sort_jun = ? "
							+ "ORDER BY sort_jun, koutsuu_shudan";
		return mapToDto(connection.load(sql, sortJun));
	}

	/**
	* 海外用交通手段マスター登録
	* @param dto 海外用交通手段マスター
	* @return 件数
	*/
	public int insert(
		KaigaiKoutsuuShudanMaster dto
	){
		final String sql =
				"INSERT INTO kaigai_koutsuu_shudan_master "
			+ "VALUES(?, ?, ?, ?, ? "
			+ ")";
			return connection.update(sql,
					dto.sortJun, dto.koutsuuShudan, dto.shouhyouShoruiHissuFlg, dto.zeiKubun, dto.edaban
					);
	}

	/**
	* 海外用交通手段マスター登録or更新
	* 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	* @param dto 海外用交通手段マスター
	* @return 件数
	*/
	public int upsert(
		KaigaiKoutsuuShudanMaster dto
		 ){
		final String sql =
				"INSERT INTO kaigai_koutsuu_shudan_master "
			+ "VALUES(?, ?, ?, ?, ? "
			+ ") ON CONFLICT ON CONSTRAINT kaigai_koutsuu_shudan_master_pkey "
			+ "DO UPDATE SET shouhyou_shorui_hissu_flg = ?, zei_kubun = ?, edaban = ? "
			+ "";
			return connection.update(sql,
				dto.sortJun, dto.koutsuuShudan, dto.shouhyouShoruiHissuFlg, dto.zeiKubun, dto.edaban
				, dto.shouhyouShoruiHissuFlg, dto.zeiKubun, dto.edaban
				);
    }
	
	/**
	 * 海外用交通手段マスターから主キー指定でレコードを削除
	 * @param sortJun 並び順
	 * @param koutsuuShudan 交通手段
	 * @return 削除件数
	 */
	public int delete(String sortJun, String koutsuuShudan){
		final String sql = "DELETE FROM kaigai_koutsuu_shudan_master WHERE sort_jun = ? AND koutsuu_shudan = ?";
		return connection.update(sql, sortJun, koutsuuShudan);
	}
	
	/**
	 * 海外用交通手段マスターから一部キー指定でレコードを削除
	 * @param sortJun 並び順
	 * @return 削除件数
	 */
	public int delete(String sortJun) {
		final String sql = "DELETE FROM kaigai_koutsuu_shudan_master WHERE sort_jun = ? ";
		return connection.update(sql, sortJun);
	}
}
