package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.SuitouchouSetting;

/**
 * 出納帳設定に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class SuitouchouSettingAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected SuitouchouSetting mapToDto(GMap map){
		return map == null ? null : new SuitouchouSetting(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<SuitouchouSetting> mapToDto(List<GMap> mapList){
		List<SuitouchouSetting> dtoList = new ArrayList<SuitouchouSetting>();
		for (var map : mapList) {
			dtoList.add(new SuitouchouSetting(map));
		}
		return dtoList;
	}
	
	/**
	 * 出納帳設定のレコード有無を判定
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @return true:exist false:not exist
	 */
	public boolean exists(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo) {
		return this.find(denpyouKbn, zaimuKyotenNyuryokuPatternNo) == null ? false : true;
	}
	
	/**
	 * 出納帳設定から主キー指定でレコードを取得
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @return 出納帳設定DTO
	 */
	public SuitouchouSetting find(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo) {
		final String sql = "SELECT * FROM suitouchou_setting WHERE denpyou_kbn = ? AND zaimu_kyoten_nyuryoku_pattern_no = ?";
		return mapToDto(connection.find(sql, denpyouKbn, zaimuKyotenNyuryokuPatternNo));
	}
	
	/**
	 * 出納帳設定からレコードを全件取得 ※大量データ取得に注意
	 * @return List<出納帳設定DTO>
	 */
	public List<SuitouchouSetting> load() {
		final String sql = "SELECT * FROM suitouchou_setting ORDER BY denpyou_kbn, zaimu_kyoten_nyuryoku_pattern_no";
		return mapToDto(connection.load(sql));
	}
	
	/**
	 * 出納帳設定から一部キー指定でレコードを取得
	 * @param denpyouKbn 伝票区分
	 * @return List<出納帳設定>DTO
	 */
	public List<SuitouchouSetting> load(String denpyouKbn) {
		final String sql = "SELECT * FROM suitouchou_setting WHERE denpyou_kbn = ? "
							+ "ORDER BY denpyou_kbn, zaimu_kyoten_nyuryoku_pattern_no";
		return mapToDto(connection.load(sql, denpyouKbn));
	}

	/**
	* 出納帳設定登録
	* @param dto 出納帳設定
	* @param koushinUserId 更新ユーザーID
	* @return 件数
	*/
	public int insert(
		SuitouchouSetting dto
		,String koushinUserId
	){
		final String sql =
				"INSERT INTO suitouchou_setting "
			+ "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp, ?, current_timestamp "
			+ ")";
			return connection.update(sql,
					dto.denpyouKbn, dto.zaimuKyotenNyuryokuPatternNo, dto.zandakaType, dto.futanBumonCd, dto.futanBumonName, dto.kamokuGaibuCd, dto.kamokuName, dto.kamokuEdabanCd, dto.kamokuEdabanName, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.kaishiDate, dto.kaishiKesn, dto.kaishiZandaka, dto.kaishiZandakaTorikomiZumiFlg, dto.denpyouNoTaniFlg, koushinUserId, koushinUserId
					);
	}

	/**
	* 出納帳設定の非キー全てと共通列を更新
	* 値設定漏れによるデータ消失防止のためDaoで取得したSuitouchouSettingの使用を前提
	* @param dto 出納帳設定
	* @param koushinUserId 更新ユーザーID
	* @return 件数
	*/
	public int update(
		SuitouchouSetting dto
		,String koushinUserId
		 ){
		final String sql =
				"UPDATE suitouchou_setting "
		    + "SET zandaka_type = ?, futan_bumon_cd = ?, futan_bumon_name = ?, kamoku_gaibu_cd = ?, kamoku_name = ?, kamoku_edaban_cd = ?, kamoku_edaban_name = ?, hf1_cd = ?, hf1_name_ryakushiki = ?, hf2_cd = ?, hf2_name_ryakushiki = ?, hf3_cd = ?, hf3_name_ryakushiki = ?, hf4_cd = ?, hf4_name_ryakushiki = ?, hf5_cd = ?, hf5_name_ryakushiki = ?, hf6_cd = ?, hf6_name_ryakushiki = ?, hf7_cd = ?, hf7_name_ryakushiki = ?, hf8_cd = ?, hf8_name_ryakushiki = ?, hf9_cd = ?, hf9_name_ryakushiki = ?, hf10_cd = ?, hf10_name_ryakushiki = ?, kaishi_date = ?, kaishi_kesn = ?, kaishi_zandaka = ?, kaishi_zandaka_torikomi_zumi_flg = ?, denpyou_no_tani_flg = ?, koushin_user_id = ?, koushin_time = current_timestamp "
	 		+ "WHERE koushin_time = ? AND denpyou_kbn = ? AND zaimu_kyoten_nyuryoku_pattern_no = ?";
			return connection.update(sql,
				dto.zandakaType, dto.futanBumonCd, dto.futanBumonName, dto.kamokuGaibuCd, dto.kamokuName, dto.kamokuEdabanCd, dto.kamokuEdabanName, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.kaishiDate, dto.kaishiKesn, dto.kaishiZandaka, dto.kaishiZandakaTorikomiZumiFlg, dto.denpyouNoTaniFlg, koushinUserId
				,dto.koushinTime, dto.denpyouKbn, dto.zaimuKyotenNyuryokuPatternNo);
    }

	/**
	* 出納帳設定登録or更新
	* 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	* @param dto 出納帳設定
	* @param koushinUserId 更新ユーザーID
	* @return 件数
	*/
	public int upsert(
		SuitouchouSetting dto
		,String koushinUserId
		 ){
		final String sql =
				"INSERT INTO suitouchou_setting "
			+ "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp, ?, current_timestamp "
			+ ") ON CONFLICT ON CONSTRAINT suitouchou_setting_pkey "
			+ "DO UPDATE SET zandaka_type = ?, futan_bumon_cd = ?, futan_bumon_name = ?, kamoku_gaibu_cd = ?, kamoku_name = ?, kamoku_edaban_cd = ?, kamoku_edaban_name = ?, hf1_cd = ?, hf1_name_ryakushiki = ?, hf2_cd = ?, hf2_name_ryakushiki = ?, hf3_cd = ?, hf3_name_ryakushiki = ?, hf4_cd = ?, hf4_name_ryakushiki = ?, hf5_cd = ?, hf5_name_ryakushiki = ?, hf6_cd = ?, hf6_name_ryakushiki = ?, hf7_cd = ?, hf7_name_ryakushiki = ?, hf8_cd = ?, hf8_name_ryakushiki = ?, hf9_cd = ?, hf9_name_ryakushiki = ?, hf10_cd = ?, hf10_name_ryakushiki = ?, kaishi_date = ?, kaishi_kesn = ?, kaishi_zandaka = ?, kaishi_zandaka_torikomi_zumi_flg = ?, denpyou_no_tani_flg = ?, koushin_user_id = ?, koushin_time = current_timestamp "
			+ "";
			return connection.update(sql,
				dto.denpyouKbn, dto.zaimuKyotenNyuryokuPatternNo, dto.zandakaType, dto.futanBumonCd, dto.futanBumonName, dto.kamokuGaibuCd, dto.kamokuName, dto.kamokuEdabanCd, dto.kamokuEdabanName, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.kaishiDate, dto.kaishiKesn, dto.kaishiZandaka, dto.kaishiZandakaTorikomiZumiFlg, dto.denpyouNoTaniFlg, koushinUserId, koushinUserId
				, dto.zandakaType, dto.futanBumonCd, dto.futanBumonName, dto.kamokuGaibuCd, dto.kamokuName, dto.kamokuEdabanCd, dto.kamokuEdabanName, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.kaishiDate, dto.kaishiKesn, dto.kaishiZandaka, dto.kaishiZandakaTorikomiZumiFlg, dto.denpyouNoTaniFlg, koushinUserId
				);
    }
	
	/**
	 * 出納帳設定から主キー指定でレコードを削除
	 * @param denpyouKbn 伝票区分
	 * @param zaimuKyotenNyuryokuPatternNo 拠点入力パターンNo
	 * @return 削除件数
	 */
	public int delete(String denpyouKbn, String zaimuKyotenNyuryokuPatternNo){
		final String sql = "DELETE FROM suitouchou_setting WHERE denpyou_kbn = ? AND zaimu_kyoten_nyuryoku_pattern_no = ?";
		return connection.update(sql, denpyouKbn, zaimuKyotenNyuryokuPatternNo);
	}
	
	/**
	 * 出納帳設定から一部キー指定でレコードを削除
	 * @param denpyouKbn 伝票区分
	 * @return 削除件数
	 */
	public int delete(String denpyouKbn) {
		final String sql = "DELETE FROM suitouchou_setting WHERE denpyou_kbn = ? ";
		return connection.update(sql, denpyouKbn);
	}
}
