package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.KaniTodokeMeisaiIchiran;

/**
 * 届出ジェネレータ明細一覧に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class KaniTodokeMeisaiIchiranAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected KaniTodokeMeisaiIchiran mapToDto(GMap map){
		return map == null ? null : new KaniTodokeMeisaiIchiran(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<KaniTodokeMeisaiIchiran> mapToDto(List<GMap> mapList){
		List<KaniTodokeMeisaiIchiran> dtoList = new ArrayList<KaniTodokeMeisaiIchiran>();
		for (var map : mapList) {
			dtoList.add(new KaniTodokeMeisaiIchiran(map));
		}
		return dtoList;
	}
	
	/**
	 * 届出ジェネレータ明細一覧のレコード有無を判定
	 * @param denpyouId 伝票ID
	 * @param denpyouEdano 伝票枝番号
	 * @return true:exist false:not exist
	 */
	public boolean exists(String denpyouId, int denpyouEdano) {
		return this.find(denpyouId, denpyouEdano) == null ? false : true;
	}
	
	/**
	 * 届出ジェネレータ明細一覧から主キー指定でレコードを取得
	 * @param denpyouId 伝票ID
	 * @param denpyouEdano 伝票枝番号
	 * @return 届出ジェネレータ明細一覧DTO
	 */
	public KaniTodokeMeisaiIchiran find(String denpyouId, int denpyouEdano) {
		final String sql = "SELECT * FROM kani_todoke_meisai_ichiran WHERE denpyou_id = ? AND denpyou_edano = ?";
		return mapToDto(connection.find(sql, denpyouId, denpyouEdano));
	}
	
	/**
	 * 届出ジェネレータ明細一覧からレコードを全件取得 ※大量データ取得に注意
	 * @return List<届出ジェネレータ明細一覧DTO>
	 */
	public List<KaniTodokeMeisaiIchiran> load() {
		final String sql = "SELECT * FROM kani_todoke_meisai_ichiran ORDER BY denpyou_id, denpyou_edano";
		return mapToDto(connection.load(sql));
	}
	
	/**
	 * 届出ジェネレータ明細一覧から一部キー指定でレコードを取得
	 * @param denpyouId 伝票ID
	 * @return List<届出ジェネレータ明細一覧>DTO
	 */
	public List<KaniTodokeMeisaiIchiran> load(String denpyouId) {
		final String sql = "SELECT * FROM kani_todoke_meisai_ichiran WHERE denpyou_id = ? "
							+ "ORDER BY denpyou_id, denpyou_edano";
		return mapToDto(connection.load(sql, denpyouId));
	}

	/**
	* 届出ジェネレータ明細一覧登録
	* @param dto 届出ジェネレータ明細一覧
	* @return 件数
	*/
	public int insert(
		KaniTodokeMeisaiIchiran dto
	){
		final String sql =
				"INSERT INTO kani_todoke_meisai_ichiran "
			+ "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? "
			+ ")";
			return connection.update(sql,
					dto.denpyouId, dto.denpyouEdano, dto.meisai01, dto.meisai02, dto.meisai03, dto.meisai04, dto.meisai05, dto.meisai06, dto.meisai07, dto.meisai08, dto.meisai09, dto.meisai10, dto.meisai11, dto.meisai12, dto.meisai13, dto.meisai14, dto.meisai15, dto.meisai16, dto.meisai17, dto.meisai18, dto.meisai19, dto.meisai20, dto.meisai21, dto.meisai22, dto.meisai23, dto.meisai24, dto.meisai25, dto.meisai26, dto.meisai27, dto.meisai28, dto.meisai29, dto.meisai30
					);
	}

	/**
	* 届出ジェネレータ明細一覧登録or更新
	* 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	* @param dto 届出ジェネレータ明細一覧
	* @return 件数
	*/
	public int upsert(
		KaniTodokeMeisaiIchiran dto
		 ){
		final String sql =
				"INSERT INTO kani_todoke_meisai_ichiran "
			+ "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? "
			+ ") ON CONFLICT ON CONSTRAINT kani_todoke_meisai_ichiran_pkey "
			+ "DO UPDATE SET meisai01 = ?, meisai02 = ?, meisai03 = ?, meisai04 = ?, meisai05 = ?, meisai06 = ?, meisai07 = ?, meisai08 = ?, meisai09 = ?, meisai10 = ?, meisai11 = ?, meisai12 = ?, meisai13 = ?, meisai14 = ?, meisai15 = ?, meisai16 = ?, meisai17 = ?, meisai18 = ?, meisai19 = ?, meisai20 = ?, meisai21 = ?, meisai22 = ?, meisai23 = ?, meisai24 = ?, meisai25 = ?, meisai26 = ?, meisai27 = ?, meisai28 = ?, meisai29 = ?, meisai30 = ? "
			+ "";
			return connection.update(sql,
				dto.denpyouId, dto.denpyouEdano, dto.meisai01, dto.meisai02, dto.meisai03, dto.meisai04, dto.meisai05, dto.meisai06, dto.meisai07, dto.meisai08, dto.meisai09, dto.meisai10, dto.meisai11, dto.meisai12, dto.meisai13, dto.meisai14, dto.meisai15, dto.meisai16, dto.meisai17, dto.meisai18, dto.meisai19, dto.meisai20, dto.meisai21, dto.meisai22, dto.meisai23, dto.meisai24, dto.meisai25, dto.meisai26, dto.meisai27, dto.meisai28, dto.meisai29, dto.meisai30
				, dto.meisai01, dto.meisai02, dto.meisai03, dto.meisai04, dto.meisai05, dto.meisai06, dto.meisai07, dto.meisai08, dto.meisai09, dto.meisai10, dto.meisai11, dto.meisai12, dto.meisai13, dto.meisai14, dto.meisai15, dto.meisai16, dto.meisai17, dto.meisai18, dto.meisai19, dto.meisai20, dto.meisai21, dto.meisai22, dto.meisai23, dto.meisai24, dto.meisai25, dto.meisai26, dto.meisai27, dto.meisai28, dto.meisai29, dto.meisai30
				);
    }
	
	/**
	 * 届出ジェネレータ明細一覧から主キー指定でレコードを削除
	 * @param denpyouId 伝票ID
	 * @param denpyouEdano 伝票枝番号
	 * @return 削除件数
	 */
	public int delete(String denpyouId, int denpyouEdano){
		final String sql = "DELETE FROM kani_todoke_meisai_ichiran WHERE denpyou_id = ? AND denpyou_edano = ?";
		return connection.update(sql, denpyouId, denpyouEdano);
	}
	
	/**
	 * 届出ジェネレータ明細一覧から一部キー指定でレコードを削除
	 * @param denpyouId 伝票ID
	 * @return 削除件数
	 */
	public int delete(String denpyouId) {
		final String sql = "DELETE FROM kani_todoke_meisai_ichiran WHERE denpyou_id = ? ";
		return connection.update(sql, denpyouId);
	}
}
