package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.BusLineMaster;

/**
 * バス路線名マスターに対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class BusLineMasterAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected BusLineMaster mapToDto(GMap map){
		return map == null ? null : new BusLineMaster(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<BusLineMaster> mapToDto(List<GMap> mapList){
		List<BusLineMaster> dtoList = new ArrayList<BusLineMaster>();
		for (var map : mapList) {
			dtoList.add(new BusLineMaster(map));
		}
		return dtoList;
	}
	
	/**
	 * バス路線名マスターのレコード有無を判定
	 * @param lineCd バス路線コード
	 * @return true:exist false:not exist
	 */
	public boolean exists(String lineCd) {
		return this.find(lineCd) == null ? false : true;
	}
	
	/**
	 * バス路線名マスターから主キー指定でレコードを取得
	 * @param lineCd バス路線コード
	 * @return バス路線名マスターDTO
	 */
	public BusLineMaster find(String lineCd) {
		final String sql = "SELECT * FROM bus_line_master WHERE line_cd = ?";
		return mapToDto(connection.find(sql, lineCd));
	}
	
	/**
	 * バス路線名マスターからレコードを全件取得 ※大量データ取得に注意
	 * @return List<バス路線名マスターDTO>
	 */
	public List<BusLineMaster> load() {
		final String sql = "SELECT * FROM bus_line_master ORDER BY line_cd";
		return mapToDto(connection.load(sql));
	}

	/**
	* バス路線名マスター登録
	* @param dto バス路線名マスター
	* @return 件数
	*/
	public int insert(
		BusLineMaster dto
	){
		final String sql =
				"INSERT INTO bus_line_master "
			+ "VALUES(?, ? "
			+ ")";
			return connection.update(sql,
					dto.lineCd, dto.lineName
					);
	}

	/**
	* バス路線名マスター登録or更新
	* 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	* @param dto バス路線名マスター
	* @return 件数
	*/
	public int upsert(
		BusLineMaster dto
		 ){
		final String sql =
				"INSERT INTO bus_line_master "
			+ "VALUES(?, ? "
			+ ") ON CONFLICT ON CONSTRAINT bus_line_master_pkey "
			+ "DO UPDATE SET line_name = ? "
			+ "";
			return connection.update(sql,
				dto.lineCd, dto.lineName
				, dto.lineName
				);
    }
	
	/**
	 * バス路線名マスターから主キー指定でレコードを削除
	 * @param lineCd バス路線コード
	 * @return 削除件数
	 */
	public int delete(String lineCd){
		final String sql = "DELETE FROM bus_line_master WHERE line_cd = ?";
		return connection.update(sql, lineCd);
	}
}
