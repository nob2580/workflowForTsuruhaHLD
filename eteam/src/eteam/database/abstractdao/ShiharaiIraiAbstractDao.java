package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.ShiharaiIrai;

/**
 * 支払依頼に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class ShiharaiIraiAbstractDao extends EteamAbstractLogic {

	/**
	 * insert文定型部
	 */
	protected final String insertSql = "INSERT INTO shiharai_irai (denpyou_id, keijoubi, yoteibi, shiharaibi, shiharai_kijitsu, torihikisaki_cd, torihikisaki_name_ryakushiki, ichigensaki_torihikisaki_name, edi, shiharai_goukei, sousai_goukei, sashihiki_shiharai, manekin_gensen, shouhyou_shorui_flg, hf1_cd, hf1_name_ryakushiki, hf2_cd, hf2_name_ryakushiki, hf3_cd, hf3_name_ryakushiki, hf4_cd, hf4_name_ryakushiki, hf5_cd, hf5_name_ryakushiki, hf6_cd, hf6_name_ryakushiki, hf7_cd, hf7_name_ryakushiki, hf8_cd, hf8_name_ryakushiki, hf9_cd, hf9_name_ryakushiki, hf10_cd, hf10_name_ryakushiki, shiharai_houhou, shiharai_shubetsu, furikomi_ginkou_cd, furikomi_ginkou_name, furikomi_ginkou_shiten_cd, furikomi_ginkou_shiten_name, yokin_shubetsu, kouza_bangou, kouza_meiginin, tesuuryou, hosoku, gyaku_shiwake_flg, shutsuryoku_flg, csv_upload_flg, hassei_shubetsu, saimu_made_flg, fb_made_flg, touroku_user_id, touroku_time, koushin_user_id, koushin_time, nyuryoku_houshiki, jigyousha_kbn, jigyousha_no, invoice_denpyou) VALUES "
			+ "(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp, ?, current_timestamp, ?, ?, ?, ?)";

	/**
	 * 主キー条件定型部
	 */
	protected final String whereSql = " WHERE denpyou_id = ?";

	/**
	 * @param map GMap
	 * @return dto (レコードが存在しなければNull)
	 */
	protected ShiharaiIrai mapToDto(GMap map) {
		return map == null ? null : new ShiharaiIrai(map);
	}

	/**
	 * @param mapList 検索結果GMap
	 * @return dtoList
	 */
	protected List<ShiharaiIrai> mapToDto(List<GMap> mapList) {
		List<ShiharaiIrai> dtoList = new ArrayList<ShiharaiIrai>();
		for (var map : mapList) {
			dtoList.add(new ShiharaiIrai(map));
		}
		return dtoList;
	}

	/**
	 * 支払依頼のレコード有無を判定
	 * @param denpyouId 伝票ID
	 * @return true:exist false:not exist
	 */
	public boolean exists(String denpyouId) {
		return this.find(denpyouId) != null;
	}

	/**
	 * 支払依頼から主キー指定でレコードを取得
	 * @param denpyouId 伝票ID
	 * @return 支払依頼DTO
	 */
	public ShiharaiIrai find(String denpyouId) {
		final String sql = "SELECT * FROM shiharai_irai " + this.whereSql;
		return mapToDto(connection.find(sql, denpyouId));
	}

	/**
	 * 支払依頼からレコードを全件取得 ※大量データ取得に注意
	 * @return List<支払依頼DTO>
	 */
	public List<ShiharaiIrai> load() {
		final String sql = "SELECT * FROM shiharai_irai  ORDER BY denpyou_id";
		return mapToDto(connection.load(sql));
	}

	/**
	 * 支払依頼登録
	 * @param dto 支払依頼
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int insert(ShiharaiIrai dto, String koushinUserId) {
		return connection.update(this.insertSql, dto.denpyouId, dto.keijoubi, dto.yoteibi, dto.shiharaibi, dto.shiharaiKijitsu, dto.torihikisakiCd, dto.torihikisakiNameRyakushiki, dto.ichigensakiTorihikisakiName, dto.edi, dto.shiharaiGoukei, dto.sousaiGoukei, dto.sashihikiShiharai, dto.manekinGensen, dto.shouhyouShoruiFlg, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.shiharaiHouhou, dto.shiharaiShubetsu, dto.furikomiGinkouCd, dto.furikomiGinkouName, dto.furikomiGinkouShitenCd, dto.furikomiGinkouShitenName, dto.yokinShubetsu, dto.kouzaBangou, dto.kouzaMeiginin, dto.tesuuryou, dto.hosoku, dto.gyakuShiwakeFlg, dto.shutsuryokuFlg, dto.csvUploadFlg, dto.hasseiShubetsu, dto.saimuMadeFlg, dto.fbMadeFlg, koushinUserId, koushinUserId, dto.nyuryokuHoushiki, dto.jigyoushaKbn, dto.jigyoushaNo, dto.invoiceDenpyou);
	}

	/**
	 * 支払依頼更新
	 * @param dto 支払依頼
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int update(ShiharaiIrai dto, String koushinUserId) {
		final String sql = "UPDATE shiharai_irai SET  keijoubi = ?, yoteibi = ?, shiharaibi = ?, shiharai_kijitsu = ?, torihikisaki_cd = ?, torihikisaki_name_ryakushiki = ?, ichigensaki_torihikisaki_name = ?, edi = ?, shiharai_goukei = ?, sousai_goukei = ?, sashihiki_shiharai = ?, manekin_gensen = ?, shouhyou_shorui_flg = ?, hf1_cd = ?, hf1_name_ryakushiki = ?, hf2_cd = ?, hf2_name_ryakushiki = ?, hf3_cd = ?, hf3_name_ryakushiki = ?, hf4_cd = ?, hf4_name_ryakushiki = ?, hf5_cd = ?, hf5_name_ryakushiki = ?, hf6_cd = ?, hf6_name_ryakushiki = ?, hf7_cd = ?, hf7_name_ryakushiki = ?, hf8_cd = ?, hf8_name_ryakushiki = ?, hf9_cd = ?, hf9_name_ryakushiki = ?, hf10_cd = ?, hf10_name_ryakushiki = ?, shiharai_houhou = ?, shiharai_shubetsu = ?, furikomi_ginkou_cd = ?, furikomi_ginkou_name = ?, furikomi_ginkou_shiten_cd = ?, furikomi_ginkou_shiten_name = ?, yokin_shubetsu = ?, kouza_bangou = ?, kouza_meiginin = ?, tesuuryou = ?, hosoku = ?, gyaku_shiwake_flg = ?, shutsuryoku_flg = ?, csv_upload_flg = ?, hassei_shubetsu = ?, saimu_made_flg = ?, fb_made_flg = ?, koushin_user_id = ?, koushin_time = current_timestamp, nyuryoku_houshiki = ?, jigyousha_kbn = ?, jigyousha_no = ?, invoice_denpyou = ? " + this.whereSql;
		return connection.update(sql, dto.keijoubi, dto.yoteibi, dto.shiharaibi, dto.shiharaiKijitsu, dto.torihikisakiCd, dto.torihikisakiNameRyakushiki, dto.ichigensakiTorihikisakiName, dto.edi, dto.shiharaiGoukei, dto.sousaiGoukei, dto.sashihikiShiharai, dto.manekinGensen, dto.shouhyouShoruiFlg, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.shiharaiHouhou, dto.shiharaiShubetsu, dto.furikomiGinkouCd, dto.furikomiGinkouName, dto.furikomiGinkouShitenCd, dto.furikomiGinkouShitenName, dto.yokinShubetsu, dto.kouzaBangou, dto.kouzaMeiginin, dto.tesuuryou, dto.hosoku, dto.gyakuShiwakeFlg, dto.shutsuryokuFlg, dto.csvUploadFlg, dto.hasseiShubetsu, dto.saimuMadeFlg, dto.fbMadeFlg, koushinUserId, dto.nyuryokuHoushiki, dto.jigyoushaKbn, dto.jigyoushaNo, dto.invoiceDenpyou, dto.denpyouId);
	}

	/**
	 * 支払依頼登録or更新
	 * 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	 * @param dto 支払依頼
	 * @param koushinUserId 更新ユーザーID
	 * @return 件数
	 */
	public int upsert(ShiharaiIrai dto, String koushinUserId) {
		final String sql = this.insertSql
			+ " ON CONFLICT ON CONSTRAINT shiharai_irai_pkey "
			+ "DO UPDATE SET  keijoubi = ?, yoteibi = ?, shiharaibi = ?, shiharai_kijitsu = ?, torihikisaki_cd = ?, torihikisaki_name_ryakushiki = ?, ichigensaki_torihikisaki_name = ?, edi = ?, shiharai_goukei = ?, sousai_goukei = ?, sashihiki_shiharai = ?, manekin_gensen = ?, shouhyou_shorui_flg = ?, hf1_cd = ?, hf1_name_ryakushiki = ?, hf2_cd = ?, hf2_name_ryakushiki = ?, hf3_cd = ?, hf3_name_ryakushiki = ?, hf4_cd = ?, hf4_name_ryakushiki = ?, hf5_cd = ?, hf5_name_ryakushiki = ?, hf6_cd = ?, hf6_name_ryakushiki = ?, hf7_cd = ?, hf7_name_ryakushiki = ?, hf8_cd = ?, hf8_name_ryakushiki = ?, hf9_cd = ?, hf9_name_ryakushiki = ?, hf10_cd = ?, hf10_name_ryakushiki = ?, shiharai_houhou = ?, shiharai_shubetsu = ?, furikomi_ginkou_cd = ?, furikomi_ginkou_name = ?, furikomi_ginkou_shiten_cd = ?, furikomi_ginkou_shiten_name = ?, yokin_shubetsu = ?, kouza_bangou = ?, kouza_meiginin = ?, tesuuryou = ?, hosoku = ?, gyaku_shiwake_flg = ?, shutsuryoku_flg = ?, csv_upload_flg = ?, hassei_shubetsu = ?, saimu_made_flg = ?, fb_made_flg = ?, koushin_user_id = ?, koushin_time = current_timestamp, nyuryoku_houshiki = ?, jigyousha_kbn = ?, jigyousha_no = ?, invoice_denpyou = ? ";
		return connection.update(sql, dto.denpyouId, dto.keijoubi, dto.yoteibi, dto.shiharaibi, dto.shiharaiKijitsu, dto.torihikisakiCd, dto.torihikisakiNameRyakushiki, dto.ichigensakiTorihikisakiName, dto.edi, dto.shiharaiGoukei, dto.sousaiGoukei, dto.sashihikiShiharai, dto.manekinGensen, dto.shouhyouShoruiFlg, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.shiharaiHouhou, dto.shiharaiShubetsu, dto.furikomiGinkouCd, dto.furikomiGinkouName, dto.furikomiGinkouShitenCd, dto.furikomiGinkouShitenName, dto.yokinShubetsu, dto.kouzaBangou, dto.kouzaMeiginin, dto.tesuuryou, dto.hosoku, dto.gyakuShiwakeFlg, dto.shutsuryokuFlg, dto.csvUploadFlg, dto.hasseiShubetsu, dto.saimuMadeFlg, dto.fbMadeFlg, koushinUserId, koushinUserId, dto.nyuryokuHoushiki, dto.jigyoushaKbn, dto.jigyoushaNo, dto.invoiceDenpyou, dto.keijoubi, dto.yoteibi, dto.shiharaibi, dto.shiharaiKijitsu, dto.torihikisakiCd, dto.torihikisakiNameRyakushiki, dto.ichigensakiTorihikisakiName, dto.edi, dto.shiharaiGoukei, dto.sousaiGoukei, dto.sashihikiShiharai, dto.manekinGensen, dto.shouhyouShoruiFlg, dto.hf1Cd, dto.hf1NameRyakushiki, dto.hf2Cd, dto.hf2NameRyakushiki, dto.hf3Cd, dto.hf3NameRyakushiki, dto.hf4Cd, dto.hf4NameRyakushiki, dto.hf5Cd, dto.hf5NameRyakushiki, dto.hf6Cd, dto.hf6NameRyakushiki, dto.hf7Cd, dto.hf7NameRyakushiki, dto.hf8Cd, dto.hf8NameRyakushiki, dto.hf9Cd, dto.hf9NameRyakushiki, dto.hf10Cd, dto.hf10NameRyakushiki, dto.shiharaiHouhou, dto.shiharaiShubetsu, dto.furikomiGinkouCd, dto.furikomiGinkouName, dto.furikomiGinkouShitenCd, dto.furikomiGinkouShitenName, dto.yokinShubetsu, dto.kouzaBangou, dto.kouzaMeiginin, dto.tesuuryou, dto.hosoku, dto.gyakuShiwakeFlg, dto.shutsuryokuFlg, dto.csvUploadFlg, dto.hasseiShubetsu, dto.saimuMadeFlg, dto.fbMadeFlg, koushinUserId, dto.nyuryokuHoushiki, dto.jigyoushaKbn, dto.jigyoushaNo, dto.invoiceDenpyou);
	}

	/**
	 * 支払依頼から主キー指定でレコードを削除
	 * @param denpyouId 伝票ID
	 * @return 削除件数
	 */
	public int delete(String denpyouId) {
		final String sql = "DELETE FROM shiharai_irai " + this.whereSql;
		return connection.update(sql, denpyouId);
	}

	/**
	 * CSVアップロードフラグを1にする
	 * @param denpyouId 伝票ID
	 * @param hasseiShubetsu 発生種別
	 */
	public void updateCSVUploadFlg(String denpyouId, String hasseiShubetsu) {
		final String sql = "UPDATE shiharai_irai SET csv_upload_flg = '1', hassei_shubetsu = ? WHERE denpyou_id = ?";
		connection.update(sql, hasseiShubetsu, denpyouId);
	}
}