package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.YosanShikkouShoriNengetsu;

/**
 * 予算執行処理年月に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class YosanShikkouShoriNengetsuAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected YosanShikkouShoriNengetsu mapToDto(GMap map){
		return map == null ? null : new YosanShikkouShoriNengetsu(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<YosanShikkouShoriNengetsu> mapToDto(List<GMap> mapList){
		List<YosanShikkouShoriNengetsu> dtoList = new ArrayList<YosanShikkouShoriNengetsu>();
		for (var map : mapList) {
			dtoList.add(new YosanShikkouShoriNengetsu(map));
		}
		return dtoList;
	}
	
	/**
	 * 予算執行処理年月のレコード有無を判定
	 * @param fromNengetsu 開始年月
	 * @param toNengetsu 終了年月
	 * @return true:exist false:not exist
	 */
	public boolean exists(String fromNengetsu, String toNengetsu) {
		return this.find(fromNengetsu, toNengetsu) == null ? false : true;
	}
	
	/**
	 * 予算執行処理年月から主キー指定でレコードを取得
	 * @param fromNengetsu 開始年月
	 * @param toNengetsu 終了年月
	 * @return 予算執行処理年月DTO
	 */
	public YosanShikkouShoriNengetsu find(String fromNengetsu, String toNengetsu) {
		final String sql = "SELECT * FROM yosan_shikkou_shori_nengetsu WHERE from_nengetsu = ? AND to_nengetsu = ?";
		return mapToDto(connection.find(sql, fromNengetsu, toNengetsu));
	}
	
	/**
	 * 予算執行処理年月からレコードを全件取得 ※大量データ取得に注意
	 * @return List<予算執行処理年月DTO>
	 */
	public List<YosanShikkouShoriNengetsu> load() {
		final String sql = "SELECT * FROM yosan_shikkou_shori_nengetsu ORDER BY from_nengetsu, to_nengetsu";
		return mapToDto(connection.load(sql));
	}
	
	/**
	 * 予算執行処理年月から一部キー指定でレコードを取得
	 * @param fromNengetsu 開始年月
	 * @return List<予算執行処理年月>DTO
	 */
	public List<YosanShikkouShoriNengetsu> load(String fromNengetsu) {
		final String sql = "SELECT * FROM yosan_shikkou_shori_nengetsu WHERE from_nengetsu = ? "
							+ "ORDER BY from_nengetsu, to_nengetsu";
		return mapToDto(connection.load(sql, fromNengetsu));
	}

	/**
	* 予算執行処理年月登録
	* @param dto 予算執行処理年月
	* @return 件数
	*/
	public int insert(
		YosanShikkouShoriNengetsu dto
	){
		final String sql =
				"INSERT INTO yosan_shikkou_shori_nengetsu "
			+ "VALUES(?, ? "
			+ ")";
			return connection.update(sql,
					dto.fromNengetsu, dto.toNengetsu
					);
	}
	
	/**
	 * 予算執行処理年月から主キー指定でレコードを削除
	 * @param fromNengetsu 開始年月
	 * @param toNengetsu 終了年月
	 * @return 削除件数
	 */
	public int delete(String fromNengetsu, String toNengetsu){
		final String sql = "DELETE FROM yosan_shikkou_shori_nengetsu WHERE from_nengetsu = ? AND to_nengetsu = ?";
		return connection.update(sql, fromNengetsu, toNengetsu);
	}
	
	/**
	 * 予算執行処理年月から一部キー指定でレコードを削除
	 * @param fromNengetsu 開始年月
	 * @return 削除件数
	 */
	public int delete(String fromNengetsu) {
		final String sql = "DELETE FROM yosan_shikkou_shori_nengetsu WHERE from_nengetsu = ? ";
		return connection.update(sql, fromNengetsu);
	}
}
