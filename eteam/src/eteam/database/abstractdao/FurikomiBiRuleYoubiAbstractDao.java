package eteam.database.abstractdao;

import java.util.ArrayList;
import java.util.List;

import eteam.base.EteamAbstractLogic;
import eteam.base.GMap;
import eteam.database.dto.FurikomiBiRuleYoubi;

/**
 * 振込日ルール(曜日)に対する標準データ操作クラス
 * This code was generated by the tool.
 * This code can not be changed.
 * @author CodeGenerator
 */
public abstract class FurikomiBiRuleYoubiAbstractDao extends EteamAbstractLogic {

	/**
	* @param map GMap
	* @return dto (レコードが存在しなければNull)
	*/
	protected FurikomiBiRuleYoubi mapToDto(GMap map){
		return map == null ? null : new FurikomiBiRuleYoubi(map);
	}

	/**
	* @param mapList 検索結果GMap
	* @return dtoList
	*/
	protected List<FurikomiBiRuleYoubi> mapToDto(List<GMap> mapList){
		List<FurikomiBiRuleYoubi> dtoList = new ArrayList<FurikomiBiRuleYoubi>();
		for (var map : mapList) {
			dtoList.add(new FurikomiBiRuleYoubi(map));
		}
		return dtoList;
	}
	
	/**
	 * 振込日ルール(曜日)のレコード有無を判定
	 * @param kijunWeekday 基準曜日
	 * @return true:exist false:not exist
	 */
	public boolean exists(int kijunWeekday) {
		return this.find(kijunWeekday) == null ? false : true;
	}
	
	/**
	 * 振込日ルール(曜日)から主キー指定でレコードを取得
	 * @param kijunWeekday 基準曜日
	 * @return 振込日ルール(曜日)DTO
	 */
	public FurikomiBiRuleYoubi find(int kijunWeekday) {
		final String sql = "SELECT * FROM furikomi_bi_rule_youbi WHERE kijun_weekday = ?";
		return mapToDto(connection.find(sql, kijunWeekday));
	}
	
	/**
	 * 振込日ルール(曜日)からレコードを全件取得 ※大量データ取得に注意
	 * @return List<振込日ルール(曜日)DTO>
	 */
	public List<FurikomiBiRuleYoubi> load() {
		final String sql = "SELECT * FROM furikomi_bi_rule_youbi ORDER BY kijun_weekday";
		return mapToDto(connection.load(sql));
	}

	/**
	* 振込日ルール(曜日)登録
	* @param dto 振込日ルール(曜日)
	* @return 件数
	*/
	public int insert(
		FurikomiBiRuleYoubi dto
	){
		final String sql =
				"INSERT INTO furikomi_bi_rule_youbi "
			+ "VALUES(?, ? "
			+ ")";
			return connection.update(sql,
					dto.kijunWeekday, dto.furikomiWeekday
					);
	}

	/**
	* 振込日ルール(曜日)登録or更新
	* 仕様上Insert/Updateの一方のみ処理される場合は使用不可
	* @param dto 振込日ルール(曜日)
	* @return 件数
	*/
	public int upsert(
		FurikomiBiRuleYoubi dto
		 ){
		final String sql =
				"INSERT INTO furikomi_bi_rule_youbi "
			+ "VALUES(?, ? "
			+ ") ON CONFLICT ON CONSTRAINT furikomi_bi_rule_youbi_pkey "
			+ "DO UPDATE SET furikomi_weekday = ? "
			+ "";
			return connection.update(sql,
				dto.kijunWeekday, dto.furikomiWeekday
				, dto.furikomiWeekday
				);
    }
	
	/**
	 * 振込日ルール(曜日)から主キー指定でレコードを削除
	 * @param kijunWeekday 基準曜日
	 * @return 削除件数
	 */
	public int delete(int kijunWeekday){
		final String sql = "DELETE FROM furikomi_bi_rule_youbi WHERE kijun_weekday = ?";
		return connection.update(sql, kijunWeekday);
	}
}
